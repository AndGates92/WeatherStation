#ifndef TPIU_H
#define TPIU_H
/**
 * @copyright
 * @file tpiu.h
 * @author Andrea Gianarda
 * @date 3rd of August 2021
 * @brief Trace port interface unit (TPIU) global definitions
*/

/**
 *  @defgroup RegisterGroup Register global macros, structure and functions
 *  @brief Registers global macros, structure and functions
 *  @{
 */

/**
 *  @ingroup RegisterGroup
 *  @defgroup TPIU Trace port interface unit (TPIU) macros
 *  @brief Trace port interface unit (TPIU) macros
 *  @{
 */

typedef struct {
	RO uint32_t SSPSR;            /*!< Supported parallel port sizes register                         (Offset 0x0)            */
	RW uint32_t CSPSR;            /*!< Current parallel port size register                            (Offset 0x4)            */
	   uint32_t reserved0[62U];   /*!< Reserved                                                       (Offset 0x8 to 0xFC)    */
	RO uint32_t SUPTRGM;          /*!< Supported trigger modes register                               (Offset 0x100)          */
	RW uint32_t TRGCNT;           /*!< Trigger counter value register                                 (Offset 0x104)          */
	RW uint32_t TRGMUL;           /*!< Trigger multiplier register                                    (Offset 0x108)          */
	   uint32_t reserved1[61U];   /*!< Reserved                                                       (Offset 0x10C to 0x1FC) */
	RO uint32_t SUPTPM;           /*!< Supported test patterns/modes register                         (Offset 0x200)          */
	RW uint32_t CURTPM;           /*!< Current test patterns/modes register                           (Offset 0x204)          */
	RW uint32_t TPRCR;            /*!< Test pattern repeat counter register                           (Offset 0x208)          */
	   uint32_t reserved2[61U];   /*!< Reserved                                                       (Offset 0x20C to 0x2FC) */
	RO uint32_t FFSR;             /*!< Formatter and flush status register                            (Offset 0x300)          */
	RW uint32_t FFCR;             /*!< Formatter and flush control register                           (Offset 0x304)          */
	RW uint32_t FSCR;             /*!< Formatter sychronization counter register                      (Offset 0x308)          */
	   uint32_t reserved3[61U];   /*!< Reserved                                                       (Offset 0x30C to 0x3FC) */
	RO uint32_t INEXCTL;          /*!< External control (EXTCTL) input port register                  (Offset 0x400)          */
	RW uint32_t OUTEXCTL;         /*!< External control (EXTCTL) output port register                 (Offset 0x404)          */
	   uint32_t reserved4[694U];  /*!< Reserved                                                       (Offset 0x40C to 0xEE0) */
	WO uint32_t ITTRFLINACK;      /*!< Integration test trigger in and flush in acknowledge register  (Offset 0xEE4)          */
	RO uint32_t ITTRFLIN;         /*!< Integration test trigger in and flush in register              (Offset 0xEE8)          */
	RO uint32_t ITATBDATA0;       /*!< Integration test AMBA Trace Bus (ATB) data 0 register          (Offset 0xEEC)          */
	WO uint32_t ITATBCTR2;        /*!< Integration test AMBA Trace Bus (ATB) control 2 register       (Offset 0xEF0)          */
	RO uint32_t ITATBCTR1;        /*!< Integration test AMBA Trace Bus (ATB) control 1 register       (Offset 0xEF4)          */
	RO uint32_t ITATBCTR0;        /*!< Integration test AMBA Trace Bus (ATB) control 0 register       (Offset 0xEF8)          */
	   uint32_t reserved7;        /*!< Reserved                                                       (Offset 0xEFC)          */
	RW uint32_t ITCTRL;           /*!< Integration mode control register                              (Offset 0xF00)          */
	   uint32_t reserved5[39U];   /*!< Reserved                                                       (Offset 0xF04 to 0xF9C) */
	RW uint32_t CLAIMSET;         /*!< Claim tag set register                                         (Offset 0xFA0)          */
	RW uint32_t CLAIMCLR;         /*!< Claim tag clear register                                       (Offset 0xFA4)          */
	   uint32_t reserved6[2U];    /*!< Reserved                                                       (Offset 0xFA8 to 0xFAC) */
	WO uint32_t LAR;              /*!< CoreSight lock access register                                 (Offset 0xFB0)          */
	RO uint32_t LSR;              /*!< CoreSight lock status register                                 (Offset 0xFB4)          */
	RO uint32_t AUTHSTAT;         /*!< Authentication status register                                 (Offset 0xFB8)          */
	   uint32_t reserved9[3U];    /*!< Reserved                                                       (Offset 0xFBC to 0xFC4) */
	RO uint32_t DEVID;            /*!< Device configuration register                                  (Offset 0xFC8)          */
	RO uint32_t DEVTYPE;          /*!< Device type register                                           (Offset 0xFCC)          */
	RO uint32_t PIDR4;            /*!< Peripheral identification 4 register                           (Offset 0xFD0)          */
	RO uint32_t PIDR5;            /*!< Peripheral identification 5 register                           (Offset 0xFD4)          */
	RO uint32_t PIDR6;            /*!< Peripheral identification 6 register                           (Offset 0xFD8)          */
	RO uint32_t PIDR7;            /*!< Peripheral identification 7 register                           (Offset 0xFDC)          */
	RO uint32_t PIDR0;            /*!< Peripheral identification 0 register                           (Offset 0xFE0)          */
	RO uint32_t PIDR1;            /*!< Peripheral identification 1 register                           (Offset 0xFE4)          */
	RO uint32_t PIDR2;            /*!< Peripheral identification 2 register                           (Offset 0xFE8)          */
	RO uint32_t PIDR3;            /*!< Peripheral identification 3 register                           (Offset 0xFEC)          */
	RO uint32_t CIDR0;            /*!< Component identification 0 register                            (Offset 0xFF0)          */
	RO uint32_t CIDR1;            /*!< Component identification 1 register                            (Offset 0xFF4)          */
	RO uint32_t CIDR2;            /*!< Component identification 2 register                            (Offset 0xFF8)          */
	RO uint32_t CIDR3;            /*!< Component identification 3 register                            (Offset 0xFFC)          */
} tpiu_regs;

/*!< Trace port interface unit (TPIU) registers in private peripheral bus (PPB) registers */
/*!< Supported parallel port sizes register */
#define TPIU_SSPSR_SWIDTH_OFFSET  (0U)
#define TPIU_SSPSR_SWIDTH_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH))  /*!< Mask  0xFFFFFFFF */

// Values of region attribute bits
#define TPIU_TRACEPORT_WIDTH32  (31U)
#define TPIU_TRACEPORT_WIDTH31  (30U)
#define TPIU_TRACEPORT_WIDTH30  (29U)
#define TPIU_TRACEPORT_WIDTH29  (28U)
#define TPIU_TRACEPORT_WIDTH28  (27U)
#define TPIU_TRACEPORT_WIDTH27  (26U)
#define TPIU_TRACEPORT_WIDTH26  (25U)
#define TPIU_TRACEPORT_WIDTH25  (24U)
#define TPIU_TRACEPORT_WIDTH24  (23U)
#define TPIU_TRACEPORT_WIDTH23  (22U)
#define TPIU_TRACEPORT_WIDTH22  (21U)
#define TPIU_TRACEPORT_WIDTH21  (20U)
#define TPIU_TRACEPORT_WIDTH20  (19U)
#define TPIU_TRACEPORT_WIDTH19  (18U)
#define TPIU_TRACEPORT_WIDTH18  (17U)
#define TPIU_TRACEPORT_WIDTH17  (16U)
#define TPIU_TRACEPORT_WIDTH16  (15U)
#define TPIU_TRACEPORT_WIDTH15  (14U)
#define TPIU_TRACEPORT_WIDTH14  (13U)
#define TPIU_TRACEPORT_WIDTH13  (12U)
#define TPIU_TRACEPORT_WIDTH12  (11U)
#define TPIU_TRACEPORT_WIDTH11  (10U)
#define TPIU_TRACEPORT_WIDTH10  (9U)
#define TPIU_TRACEPORT_WIDTH9   (8U)
#define TPIU_TRACEPORT_WIDTH8   (7U)
#define TPIU_TRACEPORT_WIDTH7   (6U)
#define TPIU_TRACEPORT_WIDTH6   (5U)
#define TPIU_TRACEPORT_WIDTH5   (4U)
#define TPIU_TRACEPORT_WIDTH4   (3U)
#define TPIU_TRACEPORT_WIDTH3   (2U)
#define TPIU_TRACEPORT_WIDTH2   (1U)
#define TPIU_TRACEPORT_WIDTH1   (0U)

// Values of supported parallel port size register bits
#define TPIU_TRACEPORT_SUPPORTWIDTH1_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH1)
#define TPIU_TRACEPORT_SUPPORTWIDTH1_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH1))   /*!< Mask 0x00000001 */

#define TPIU_TRACEPORT_SUPPORTWIDTH2_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH2)
#define TPIU_TRACEPORT_SUPPORTWIDTH2_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH2))   /*!< Mask 0x00000002 */

#define TPIU_TRACEPORT_SUPPORTWIDTH3_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH3)
#define TPIU_TRACEPORT_SUPPORTWIDTH3_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH3))   /*!< Mask 0x00000004 */

#define TPIU_TRACEPORT_SUPPORTWIDTH4_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH4)
#define TPIU_TRACEPORT_SUPPORTWIDTH4_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH4))   /*!< Mask 0x00000008 */

#define TPIU_TRACEPORT_SUPPORTWIDTH5_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH5)
#define TPIU_TRACEPORT_SUPPORTWIDTH5_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH5))   /*!< Mask 0x00000010 */

#define TPIU_TRACEPORT_SUPPORTWIDTH6_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH6)
#define TPIU_TRACEPORT_SUPPORTWIDTH6_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH6))   /*!< Mask 0x00000020 */

#define TPIU_TRACEPORT_SUPPORTWIDTH7_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH7)
#define TPIU_TRACEPORT_SUPPORTWIDTH7_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH7))   /*!< Mask 0x00000040 */

#define TPIU_TRACEPORT_SUPPORTWIDTH8_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH8)
#define TPIU_TRACEPORT_SUPPORTWIDTH8_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH8))   /*!< Mask 0x00000080 */

#define TPIU_TRACEPORT_SUPPORTWIDTH9_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH9)
#define TPIU_TRACEPORT_SUPPORTWIDTH9_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH9))   /*!< Mask 0x00000100 */

#define TPIU_TRACEPORT_SUPPORTWIDTH10_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH10)
#define TPIU_TRACEPORT_SUPPORTWIDTH10_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH10))  /*!< Mask 0x00000200 */

#define TPIU_TRACEPORT_SUPPORTWIDTH11_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH11)
#define TPIU_TRACEPORT_SUPPORTWIDTH11_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH11))  /*!< Mask 0x00000400 */

#define TPIU_TRACEPORT_SUPPORTWIDTH12_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH12)
#define TPIU_TRACEPORT_SUPPORTWIDTH12_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH12))  /*!< Mask 0x00000800 */

#define TPIU_TRACEPORT_SUPPORTWIDTH13_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH13)
#define TPIU_TRACEPORT_SUPPORTWIDTH13_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH13))  /*!< Mask 0x00001000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH14_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH14)
#define TPIU_TRACEPORT_SUPPORTWIDTH14_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH14))  /*!< Mask 0x00002000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH15_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH15)
#define TPIU_TRACEPORT_SUPPORTWIDTH15_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH15))  /*!< Mask 0x00004000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH16_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH16)
#define TPIU_TRACEPORT_SUPPORTWIDTH16_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH16))  /*!< Mask 0x00008000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH17_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH17)
#define TPIU_TRACEPORT_SUPPORTWIDTH17_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH17))  /*!< Mask 0x00010000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH18_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH18)
#define TPIU_TRACEPORT_SUPPORTWIDTH18_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH18))  /*!< Mask 0x00020000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH19_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH19)
#define TPIU_TRACEPORT_SUPPORTWIDTH19_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH19))  /*!< Mask 0x00040000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH20_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH20)
#define TPIU_TRACEPORT_SUPPORTWIDTH20_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH20))  /*!< Mask 0x00080000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH21_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH21)
#define TPIU_TRACEPORT_SUPPORTWIDTH21_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH21))  /*!< Mask 0x00100000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH22_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH22)
#define TPIU_TRACEPORT_SUPPORTWIDTH22_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH22))  /*!< Mask 0x00200000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH23_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH23)
#define TPIU_TRACEPORT_SUPPORTWIDTH23_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH23))  /*!< Mask 0x00400000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH24_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH24)
#define TPIU_TRACEPORT_SUPPORTWIDTH24_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH24))  /*!< Mask 0x00800000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH25_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH25)
#define TPIU_TRACEPORT_SUPPORTWIDTH25_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH25))  /*!< Mask 0x01000000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH26_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH26)
#define TPIU_TRACEPORT_SUPPORTWIDTH26_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH26))  /*!< Mask 0x02000000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH27_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH27)
#define TPIU_TRACEPORT_SUPPORTWIDTH27_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH27))  /*!< Mask 0x04000000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH28_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH28)
#define TPIU_TRACEPORT_SUPPORTWIDTH28_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH28))  /*!< Mask 0x08000000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH29_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH29)
#define TPIU_TRACEPORT_SUPPORTWIDTH29_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH29))  /*!< Mask 0x10000000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH30_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH30)
#define TPIU_TRACEPORT_SUPPORTWIDTH30_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH30))  /*!< Mask 0x20000000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH31_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH31)
#define TPIU_TRACEPORT_SUPPORTWIDTH31_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH31))  /*!< Mask 0x40000000 */

#define TPIU_TRACEPORT_SUPPORTWIDTH32_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, SSPSR, SWIDTH) + TPIU_TRACEPORT_WIDTH32)
#define TPIU_TRACEPORT_SUPPORTWIDTH32_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, SUPPORTWIDTH32))  /*!< Mask 0x80000000 */

// Values of trace port width support bit
#define TPIU_TRACEPORTWIDTH_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRACEPORTWIDTH_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

/*!< Current parallel port sizes register */
#define TPIU_CSPSR_CWIDTH_OFFSET  (0U)
#define TPIU_CSPSR_CWIDTH_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH))  /*!< Mask  0xFFFFFFFF */

// Values of supported parallel port size register bits
#define TPIU_TRACEPORT_CURRENTWIDTH1_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH1)
#define TPIU_TRACEPORT_CURRENTWIDTH1_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH1))   /*!< Mask 0x00000001 */

#define TPIU_TRACEPORT_CURRENTWIDTH2_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH2)
#define TPIU_TRACEPORT_CURRENTWIDTH2_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH2))   /*!< Mask 0x00000002 */

#define TPIU_TRACEPORT_CURRENTWIDTH3_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH3)
#define TPIU_TRACEPORT_CURRENTWIDTH3_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH3))   /*!< Mask 0x00000004 */

#define TPIU_TRACEPORT_CURRENTWIDTH4_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH4)
#define TPIU_TRACEPORT_CURRENTWIDTH4_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH4))   /*!< Mask 0x00000008 */

#define TPIU_TRACEPORT_CURRENTWIDTH5_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH5)
#define TPIU_TRACEPORT_CURRENTWIDTH5_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH5))   /*!< Mask 0x00000010 */

#define TPIU_TRACEPORT_CURRENTWIDTH6_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH6)
#define TPIU_TRACEPORT_CURRENTWIDTH6_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH6))   /*!< Mask 0x00000020 */

#define TPIU_TRACEPORT_CURRENTWIDTH7_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH7)
#define TPIU_TRACEPORT_CURRENTWIDTH7_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH7))   /*!< Mask 0x00000040 */

#define TPIU_TRACEPORT_CURRENTWIDTH8_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH8)
#define TPIU_TRACEPORT_CURRENTWIDTH8_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH8))   /*!< Mask 0x00000080 */

#define TPIU_TRACEPORT_CURRENTWIDTH9_OFFSET   (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH9)
#define TPIU_TRACEPORT_CURRENTWIDTH9_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH9))   /*!< Mask 0x00000100 */

#define TPIU_TRACEPORT_CURRENTWIDTH10_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH10)
#define TPIU_TRACEPORT_CURRENTWIDTH10_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH10))  /*!< Mask 0x00000200 */

#define TPIU_TRACEPORT_CURRENTWIDTH11_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH11)
#define TPIU_TRACEPORT_CURRENTWIDTH11_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH11))  /*!< Mask 0x00000400 */

#define TPIU_TRACEPORT_CURRENTWIDTH12_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH12)
#define TPIU_TRACEPORT_CURRENTWIDTH12_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH12))  /*!< Mask 0x00000800 */

#define TPIU_TRACEPORT_CURRENTWIDTH13_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH13)
#define TPIU_TRACEPORT_CURRENTWIDTH13_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH13))  /*!< Mask 0x00001000 */

#define TPIU_TRACEPORT_CURRENTWIDTH14_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH14)
#define TPIU_TRACEPORT_CURRENTWIDTH14_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH14))  /*!< Mask 0x00002000 */

#define TPIU_TRACEPORT_CURRENTWIDTH15_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH15)
#define TPIU_TRACEPORT_CURRENTWIDTH15_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH15))  /*!< Mask 0x00004000 */

#define TPIU_TRACEPORT_CURRENTWIDTH16_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH16)
#define TPIU_TRACEPORT_CURRENTWIDTH16_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH16))  /*!< Mask 0x00008000 */

#define TPIU_TRACEPORT_CURRENTWIDTH17_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH17)
#define TPIU_TRACEPORT_CURRENTWIDTH17_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH17))  /*!< Mask 0x00010000 */

#define TPIU_TRACEPORT_CURRENTWIDTH18_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH18)
#define TPIU_TRACEPORT_CURRENTWIDTH18_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH18))  /*!< Mask 0x00020000 */

#define TPIU_TRACEPORT_CURRENTWIDTH19_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH19)
#define TPIU_TRACEPORT_CURRENTWIDTH19_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH19))  /*!< Mask 0x00040000 */

#define TPIU_TRACEPORT_CURRENTWIDTH20_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH20)
#define TPIU_TRACEPORT_CURRENTWIDTH20_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH20))  /*!< Mask 0x00080000 */

#define TPIU_TRACEPORT_CURRENTWIDTH21_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH21)
#define TPIU_TRACEPORT_CURRENTWIDTH21_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH21))  /*!< Mask 0x00100000 */

#define TPIU_TRACEPORT_CURRENTWIDTH22_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH22)
#define TPIU_TRACEPORT_CURRENTWIDTH22_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH22))  /*!< Mask 0x00200000 */

#define TPIU_TRACEPORT_CURRENTWIDTH23_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH23)
#define TPIU_TRACEPORT_CURRENTWIDTH23_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH23))  /*!< Mask 0x00400000 */

#define TPIU_TRACEPORT_CURRENTWIDTH24_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH24)
#define TPIU_TRACEPORT_CURRENTWIDTH24_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH24))  /*!< Mask 0x00800000 */

#define TPIU_TRACEPORT_CURRENTWIDTH25_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH25)
#define TPIU_TRACEPORT_CURRENTWIDTH25_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH25))  /*!< Mask 0x01000000 */

#define TPIU_TRACEPORT_CURRENTWIDTH26_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH26)
#define TPIU_TRACEPORT_CURRENTWIDTH26_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH26))  /*!< Mask 0x02000000 */

#define TPIU_TRACEPORT_CURRENTWIDTH27_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH27)
#define TPIU_TRACEPORT_CURRENTWIDTH27_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH27))  /*!< Mask 0x04000000 */

#define TPIU_TRACEPORT_CURRENTWIDTH28_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH28)
#define TPIU_TRACEPORT_CURRENTWIDTH28_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH28))  /*!< Mask 0x08000000 */

#define TPIU_TRACEPORT_CURRENTWIDTH29_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH29)
#define TPIU_TRACEPORT_CURRENTWIDTH29_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH29))  /*!< Mask 0x10000000 */

#define TPIU_TRACEPORT_CURRENTWIDTH30_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH30)
#define TPIU_TRACEPORT_CURRENTWIDTH30_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH30))  /*!< Mask 0x20000000 */

#define TPIU_TRACEPORT_CURRENTWIDTH31_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH31)
#define TPIU_TRACEPORT_CURRENTWIDTH31_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH31))  /*!< Mask 0x40000000 */

#define TPIU_TRACEPORT_CURRENTWIDTH32_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CSPSR, CWIDTH) + TPIU_TRACEPORT_WIDTH32)
#define TPIU_TRACEPORT_CURRENTWIDTH32_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRACEPORT, CURRENTWIDTH32))  /*!< Mask 0x80000000 */

// Values of trace port width support bit
#define TPIU_TRACEPORTWIDTH_NOTSELECTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRACEPORTWIDTH_SELECTED     (0x1UL)  /*!< Value 0x00000001 */

/*!< Supported trigger modes register */
#define TPIU_SUPTRGM_TRGRUN_OFFSET   (17U)
#define TPIU_SUPTRGM_TRGRUN_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, TRGRUN))   /*!< Mask  0x00020000 */

#define TPIU_SUPTRGM_TRGD_OFFSET     (16U)
#define TPIU_SUPTRGM_TRGD_MASK       (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, TRGD))     /*!< Mask  0x00010000 */

#define TPIU_SUPTRGM_TCOUNT8_OFFSET  (8U)
#define TPIU_SUPTRGM_TCOUNT8_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, TCOUNT8))  /*!< Mask  0x00000100 */

#define TPIU_SUPTRGM_MULT64K_OFFSET  (4U)
#define TPIU_SUPTRGM_MULT64K_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, MULT64K))  /*!< Mask  0x00000010 */

#define TPIU_SUPTRGM_MULT256_OFFSET  (3U)
#define TPIU_SUPTRGM_MULT256_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, MULT256))  /*!< Mask  0x00000008 */

#define TPIU_SUPTRGM_MULT16_OFFSET   (2U)
#define TPIU_SUPTRGM_MULT16_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, MULT16))   /*!< Mask  0x00000004 */

#define TPIU_SUPTRGM_MULT4_OFFSET    (1U)
#define TPIU_SUPTRGM_MULT4_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, MULT4))    /*!< Mask  0x00000002 */

#define TPIU_SUPTRGM_MULT2_OFFSET    (0U)
#define TPIU_SUPTRGM_MULT2_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTRGM, MULT2))    /*!< Mask  0x00000001 */

// Values of counter trigger running bit
#define TPIU_TRIGGERCNT_NOTTRIGGEDORCNT0     (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_TRIGGEREDANDCNTNOT0  (0x1UL)  /*!< Value 0x00000001 */

// Values of counter triggered bit
#define TPIU_TRIGGERCNT_NOTTRIGGED        (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_TRIGGEREDANDCNT0  (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether the 8-bit counter is implemented
#define TPIU_8BITTRIGGERCNT_NOTIMPLEMENTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_8BITTRIGGERCNT_IMPLEMENTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether it is supported to multiply the trigger counter by 65536
#define TPIU_TRIGGERCNT_MULTBY64KNOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY64KSUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether it is supported to multiply the trigger counter by 256
#define TPIU_TRIGGERCNT_MULTBY256NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY256SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether it is supported to multiply the trigger counter by 16
#define TPIU_TRIGGERCNT_MULTBY16NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY16SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether it is supported to multiply the trigger counter by 4
#define TPIU_TRIGGERCNT_MULTBY4NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY4SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether it is supported to multiply the trigger counter by 2
#define TPIU_TRIGGERCNT_MULTBY2NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY2SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

/*!< Trigger counter value register */
#define TPIU_TRGCNT_TRIGCOUNT_OFFSET  (0U)
#define TPIU_TRGCNT_TRIGCOUNT_MASK    (0xFFUL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Mask  0x000000FF */
#define TPIU_TRGCNT_TRIGCOUNT_0       (0x01UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000001 */
#define TPIU_TRGCNT_TRIGCOUNT_1       (0x02UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000002 */
#define TPIU_TRGCNT_TRIGCOUNT_2       (0x04UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000004 */
#define TPIU_TRGCNT_TRIGCOUNT_3       (0x08UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000008 */
#define TPIU_TRGCNT_TRIGCOUNT_4       (0x10UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000010 */
#define TPIU_TRGCNT_TRIGCOUNT_5       (0x20UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000020 */
#define TPIU_TRGCNT_TRIGCOUNT_6       (0x40UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000040 */
#define TPIU_TRGCNT_TRIGCOUNT_7       (0x80UL << REGISTER_FIELD_OFFSET(TPIU, TRGCNT, TRIGCOUNT))  /*!< Value 0x00000080 */

/*!< Trigger multiplier register */
#define TPIU_TRGMULT_MULT64K_OFFSET  (4U)
#define TPIU_TRGMULT_MULT64K_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRGMULT, MULT64K))  /*!< Mask  0x00000010 */

#define TPIU_TRGMULT_MULT256_OFFSET  (3U)
#define TPIU_TRGMULT_MULT256_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRGMULT, MULT256))  /*!< Mask  0x00000008 */

#define TPIU_TRGMULT_MULT16_OFFSET   (2U)
#define TPIU_TRGMULT_MULT16_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRGMULT, MULT16))   /*!< Mask  0x00000004 */

#define TPIU_TRGMULT_MULT4_OFFSET    (1U)
#define TPIU_TRGMULT_MULT4_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRGMULT, MULT4))    /*!< Mask  0x00000002 */

#define TPIU_TRGMULT_MULT2_OFFSET    (0U)
#define TPIU_TRGMULT_MULT2_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, TRGMULT, MULT2))    /*!< Mask  0x00000001 */

// Values of register bit enabling the multiplication of the trigger counter by 65536
#define TPIU_TRIGGERCNT_MULTBY64KDISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY64KENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit enabling the multiplication of the trigger counter by 256
#define TPIU_TRIGGERCNT_MULTBY256DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY256ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit enabling the multiplication of the trigger counter by 16
#define TPIU_TRIGGERCNT_MULTBY16DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY16ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit enabling the multiplication of the trigger counter by 4
#define TPIU_TRIGGERCNT_MULTBY4DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY4ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit enabling the multiplication of the trigger counter by 2
#define TPIU_TRIGGERCNT_MULTBY2DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERCNT_MULTBY2ENABLE   (0x1UL)  /*!< Value 0x00000001 */

/*!< Supported test patterns/modes register */
#define TPIU_SUPTPM_PCONTEN_OFFSET  (17U)
#define TPIU_SUPTPM_PCONTEN_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTPM, PCONTEN))  /*!< Mask  0x00020000 */

#define TPIU_SUPTPM_PTIMEEN_OFFSET  (16U)
#define TPIU_SUPTPM_PTIMEEN_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTPM, PTIMEEN))  /*!< Mask  0x00010000 */

#define TPIU_SUPTPM_PATF0_OFFSET    (3U)
#define TPIU_SUPTPM_PATF0_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTPM, PATF0))    /*!< Mask  0x00000008 */

#define TPIU_SUPTPM_PATA5_OFFSET    (2U)
#define TPIU_SUPTPM_PATA5_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTPM, PATA5))    /*!< Mask  0x00000004 */

#define TPIU_SUPTPM_PATW0_OFFSET    (1U)
#define TPIU_SUPTPM_PATW0_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTPM, PATW0))    /*!< Mask  0x00000002 */

#define TPIU_SUPTPM_PATW1_OFFSET    (0U)
#define TPIU_SUPTPM_PATW1_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, SUPTPM, PATW1))    /*!< Mask  0x00000001 */

// Values of register bit stating whether the continuous mode is supported
#define TPIU_CONTINUOUSMODE_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_CONTINUOUSMODE_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether the timed mode is supported
#define TPIU_TIMEDMODE_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TIMEDMODE_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether pattern FF00 is supported
#define TPIU_PATTERNFF00_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_PATTERNFF00_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether pattern AA55 is supported
#define TPIU_PATTERNAA55_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_PATTERNAA55_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether pattern 0000 is supported
#define TPIU_WALKING0_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_WALKING0_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether pattern 1111 is supported
#define TPIU_WALKING1_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_WALKING1_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

/*!< Current test patterns/modes register */
#define TPIU_CURTPM_PCONTEN_OFFSET  (17U)
#define TPIU_CURTPM_PCONTEN_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CURTPM, PCONTEN))  /*!< Mask  0x00020000 */

#define TPIU_CURTPM_PTIMEEN_OFFSET  (16U)
#define TPIU_CURTPM_PTIMEEN_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CURTPM, PTIMEEN))  /*!< Mask  0x00010000 */

#define TPIU_CURTPM_PATF0_OFFSET    (3U)
#define TPIU_CURTPM_PATF0_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CURTPM, PATF0))    /*!< Mask  0x00000008 */

#define TPIU_CURTPM_PATA5_OFFSET    (2U)
#define TPIU_CURTPM_PATA5_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CURTPM, PATA5))    /*!< Mask  0x00000004 */

#define TPIU_CURTPM_PATW0_OFFSET    (1U)
#define TPIU_CURTPM_PATW0_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CURTPM, PATW0))    /*!< Mask  0x00000002 */

#define TPIU_CURTPM_PATW1_OFFSET    (0U)
#define TPIU_CURTPM_PATW1_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CURTPM, PATW1))    /*!< Mask  0x00000001 */

// Values of continuous mode enable bit
#define TPIU_CONTINUOUSMODE_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_CONTINUOUSMODE_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of timed mode enable bit
#define TPIU_TIMEDMODE_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TIMEDMODE_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of pattern FF00 enable bit
#define TPIU_PATTERNFF00_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_PATTERNFF00_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of pattern AA55 enable bit
#define TPIU_PATTERNAA55_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_PATTERNAA55_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of pattern 0000 enable bit
#define TPIU_WALKING0_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_WALKING0_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of pattern 1111 enable bit
#define TPIU_WALKING1_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_WALKING1_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

/*!< Test pattern repeat counter register */
#define TPIU_TPRCR_PATTCOUNT_OFFSET  (0U)
#define TPIU_TPRCR_PATTCOUNT_MASK    (0xFFUL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Mask  0x000000FF */
#define TPIU_TPRCR_PATTCOUNT_0       (0x01UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000001 */
#define TPIU_TPRCR_PATTCOUNT_1       (0x02UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000002 */
#define TPIU_TPRCR_PATTCOUNT_2       (0x04UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000004 */
#define TPIU_TPRCR_PATTCOUNT_3       (0x08UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000008 */
#define TPIU_TPRCR_PATTCOUNT_4       (0x10UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000010 */
#define TPIU_TPRCR_PATTCOUNT_5       (0x20UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000020 */
#define TPIU_TPRCR_PATTCOUNT_6       (0x40UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000040 */
#define TPIU_TPRCR_PATTCOUNT_7       (0x80UL << REGISTER_FIELD_OFFSET(TPIU, TPRCR, PATTCOUNT))  /*!< Value 0x00000080 */

/*!< Formatter and flush status register */
#define TPIU_FFSR_TCPRESENT_OFFSET  (2U)
#define TPIU_FFSR_TCPRESENT_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFSR, TCPRESENT))  /*!< Mask  0x00000004 */

#define TPIU_FFSR_FTSTOPPED_OFFSET  (1U)
#define TPIU_FFSR_FTSTOPPED_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFSR, FTSTOPPED))  /*!< Mask  0x00000002 */

#define TPIU_FFSR_FLINPROG_OFFSET   (0U)
#define TPIU_FFSR_FLINPROG_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFSR, FLINPROG))   /*!< Mask  0x00000001 */

// Values of register bit stating whether TRACECTL output pin is available
#define TPIU_TRACECTLPIN_NOTPRESENT  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRACECTLPIN_PRESENT     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether the formatter has stopped
#define TPIU_FORMATTER_NOTSTOPPED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_FORMATTER_STOPPED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating whether a flush is in progress
#define TPIU_ATBPORTFLUSH_NOTINPROGRESS  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_ATBPORTFLUSH_PROGRESS       (0x1UL)  /*!< Value 0x00000001 */

/*!< Formatter and flush status register */
#define TPIU_FFCR_STOPTRIG_OFFSET  (13U)
#define TPIU_FFCR_STOPTRIG_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, STOPTRIG))  /*!< Mask  0x00002000 */

#define TPIU_FFCR_STOPFL_OFFSET    (12U)
#define TPIU_FFCR_STOPFL_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, STOPFL))    /*!< Mask  0x00001000 */

#define TPIU_FFCR_TRIGFL_OFFSET    (10U)
#define TPIU_FFCR_TRIGFL_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, TRIGFL))    /*!< Mask  0x00000400 */

#define TPIU_FFCR_TRIGEVT_OFFSET   (9U)
#define TPIU_FFCR_TRIGEVT_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, TRIGEVT))   /*!< Mask  0x00000200 */

#define TPIU_FFCR_TRIGIN_OFFSET    (8U)
#define TPIU_FFCR_TRIGIN_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, TRIGIN))    /*!< Mask  0x00000100 */

#define TPIU_FFCR_FONMAN_OFFSET    (6U)
#define TPIU_FFCR_FONMAN_MASK      (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, FONMAN))    /*!< Mask  0x00000040 */

#define TPIU_FFCR_FONTRIG_OFFSET   (5U)
#define TPIU_FFCR_FONTRIG_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, FONTRIG))   /*!< Mask  0x00000020 */

#define TPIU_FFCR_FONFLIN_OFFSET   (4U)
#define TPIU_FFCR_FONFLIN_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, FONFLIN))   /*!< Mask  0x00000010 */

#define TPIU_FFCR_ENFCONT_OFFSET   (1U)
#define TPIU_FFCR_ENFCONT_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, ENFCONT))   /*!< Mask  0x00000002 */

#define TPIU_FFCR_ENFTC_OFFSET     (0U)
#define TPIU_FFCR_ENFTC_MASK       (0x1UL << REGISTER_FIELD_OFFSET(TPIU, FFCR, ENFTC))     /*!< Mask  0x00000001 */

// Values of stop on trigger event enable bit
#define TPIU_STOPONTRIGGEREVENT_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_STOPONTRIGGEREVENT_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of stop on flush enable bit
#define TPIU_STOPONFLUSH_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_STOPONFLUSH_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of trigger on flush enable bit
#define TPIU_TRIGGERONFLUSH_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERONFLUSH_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of trigger on trigger event enable bit
#define TPIU_TRIGGERONTRIGGEREVENT_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERONTRIGGEREVENT_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit to enable trigger in the trace stream when the TRIGIN input from system CTI is asserted
#define TPIU_TRIGGERONTRIGCTISYSINPUT_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRIGGERONTRIGCTISYSINPUT_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of manual flush generate bit
#define TPIU_MANUALFLUSH_NOTTRIGGERED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_MANUALFLUSH_TRIGGERED     (0x1UL)  /*!< Value 0x00000001 */

// Values of flush on trigger event enable bit
#define TPIU_FLUSHONTRIGGEREVENT_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_FLUSHONTRIGGEREVENT_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit to enable flush the trace if the FLUSHIN input from system CTI is asserted
#define TPIU_FLUSHONFLUSHCTISYSINPUT_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_FLUSHONFLUSHCTISYSINPUT_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of continuous formatting enable bit
#define TPIU_CONTINUOUSFORMATTING_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_CONTINUOUSFORMATTING_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit enabling embedding of triggers in formatted trace
#define TPIU_FORMATTING_DISABLE  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_FORMATTING_ENABLE   (0x1UL)  /*!< Value 0x00000001 */

/*!< Formatter synchronization counter register */
#define TPIU_FSCR_CYCCOUNT_OFFSET  (0U)
#define TPIU_FSCR_CYCCOUNT_MASK    (0xFFFUL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Mask  0x00000FFF */
#define TPIU_FSCR_CYCCOUNT_0       (0x001UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000001 */
#define TPIU_FSCR_CYCCOUNT_1       (0x002UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000002 */
#define TPIU_FSCR_CYCCOUNT_2       (0x004UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000004 */
#define TPIU_FSCR_CYCCOUNT_3       (0x008UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000008 */
#define TPIU_FSCR_CYCCOUNT_4       (0x010UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000010 */
#define TPIU_FSCR_CYCCOUNT_5       (0x020UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000020 */
#define TPIU_FSCR_CYCCOUNT_6       (0x040UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000040 */
#define TPIU_FSCR_CYCCOUNT_7       (0x080UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000080 */
#define TPIU_FSCR_CYCCOUNT_8       (0x100UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000100 */
#define TPIU_FSCR_CYCCOUNT_9       (0x200UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000200 */
#define TPIU_FSCR_CYCCOUNT_10      (0x400UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000400 */
#define TPIU_FSCR_CYCCOUNT_11      (0x800UL << REGISTER_FIELD_OFFSET(TPIU, FSCR, CYCCOUNT))  /*!< Value 0x00000800 */

/*!< External control (EXTCTL) input port */
#define TPIU_INEXTCTL_PORT_OFFSET  (0U)
#define TPIU_INEXTCTL_PORT_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Mask  0xFFFFFFFF */
#define TPIU_INEXTCTL_PORT_0       (0x00000001UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000001 */
#define TPIU_INEXTCTL_PORT_1       (0x00000002UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000002 */
#define TPIU_INEXTCTL_PORT_2       (0x00000004UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000004 */
#define TPIU_INEXTCTL_PORT_3       (0x00000008UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000008 */
#define TPIU_INEXTCTL_PORT_4       (0x00000010UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000010 */
#define TPIU_INEXTCTL_PORT_5       (0x00000020UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000020 */
#define TPIU_INEXTCTL_PORT_6       (0x00000040UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000040 */
#define TPIU_INEXTCTL_PORT_7       (0x00000080UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000080 */
#define TPIU_INEXTCTL_PORT_8       (0x00000100UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000100 */
#define TPIU_INEXTCTL_PORT_9       (0x00000200UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000200 */
#define TPIU_INEXTCTL_PORT_10      (0x00000400UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000400 */
#define TPIU_INEXTCTL_PORT_11      (0x00000800UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00000800 */
#define TPIU_INEXTCTL_PORT_12      (0x00001000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00001000 */
#define TPIU_INEXTCTL_PORT_13      (0x00002000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00002000 */
#define TPIU_INEXTCTL_PORT_14      (0x00004000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00004000 */
#define TPIU_INEXTCTL_PORT_15      (0x00008000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00008000 */
#define TPIU_INEXTCTL_PORT_16      (0x00010000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00010000 */
#define TPIU_INEXTCTL_PORT_17      (0x00020000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00020000 */
#define TPIU_INEXTCTL_PORT_18      (0x00040000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00040000 */
#define TPIU_INEXTCTL_PORT_19      (0x00080000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00080000 */
#define TPIU_INEXTCTL_PORT_20      (0x00100000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00100000 */
#define TPIU_INEXTCTL_PORT_21      (0x00200000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00200000 */
#define TPIU_INEXTCTL_PORT_22      (0x00400000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00400000 */
#define TPIU_INEXTCTL_PORT_23      (0x00800000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x00800000 */
#define TPIU_INEXTCTL_PORT_24      (0x01000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x01000000 */
#define TPIU_INEXTCTL_PORT_25      (0x02000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x02000000 */
#define TPIU_INEXTCTL_PORT_26      (0x04000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x04000000 */
#define TPIU_INEXTCTL_PORT_27      (0x08000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x08000000 */
#define TPIU_INEXTCTL_PORT_28      (0x10000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x10000000 */
#define TPIU_INEXTCTL_PORT_29      (0x20000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x20000000 */
#define TPIU_INEXTCTL_PORT_30      (0x40000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x40000000 */
#define TPIU_INEXTCTL_PORT_31      (0x80000000UL << REGISTER_FIELD_OFFSET(TPIU, INEXTCTL, PORT))  /*!< Value 0x80000000 */

/*!< External control (EXTCTL) output port */
#define TPIU_OUTEXTCTL_PORT_OFFSET  (0U)
#define TPIU_OUTEXTCTL_PORT_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Mask  0xFFFFFFFF */
#define TPIU_OUTEXTCTL_PORT_0       (0x00000001UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000001 */
#define TPIU_OUTEXTCTL_PORT_1       (0x00000002UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000002 */
#define TPIU_OUTEXTCTL_PORT_2       (0x00000004UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000004 */
#define TPIU_OUTEXTCTL_PORT_3       (0x00000008UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000008 */
#define TPIU_OUTEXTCTL_PORT_4       (0x00000010UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000010 */
#define TPIU_OUTEXTCTL_PORT_5       (0x00000020UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000020 */
#define TPIU_OUTEXTCTL_PORT_6       (0x00000040UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000040 */
#define TPIU_OUTEXTCTL_PORT_7       (0x00000080UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000080 */
#define TPIU_OUTEXTCTL_PORT_8       (0x00000100UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000100 */
#define TPIU_OUTEXTCTL_PORT_9       (0x00000200UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000200 */
#define TPIU_OUTEXTCTL_PORT_10      (0x00000400UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000400 */
#define TPIU_OUTEXTCTL_PORT_11      (0x00000800UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00000800 */
#define TPIU_OUTEXTCTL_PORT_12      (0x00001000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00001000 */
#define TPIU_OUTEXTCTL_PORT_13      (0x00002000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00002000 */
#define TPIU_OUTEXTCTL_PORT_14      (0x00004000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00004000 */
#define TPIU_OUTEXTCTL_PORT_15      (0x00008000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00008000 */
#define TPIU_OUTEXTCTL_PORT_16      (0x00010000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00010000 */
#define TPIU_OUTEXTCTL_PORT_17      (0x00020000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00020000 */
#define TPIU_OUTEXTCTL_PORT_18      (0x00040000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00040000 */
#define TPIU_OUTEXTCTL_PORT_19      (0x00080000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00080000 */
#define TPIU_OUTEXTCTL_PORT_20      (0x00100000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00100000 */
#define TPIU_OUTEXTCTL_PORT_21      (0x00200000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00200000 */
#define TPIU_OUTEXTCTL_PORT_22      (0x00400000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00400000 */
#define TPIU_OUTEXTCTL_PORT_23      (0x00800000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x00800000 */
#define TPIU_OUTEXTCTL_PORT_24      (0x01000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x01000000 */
#define TPIU_OUTEXTCTL_PORT_25      (0x02000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x02000000 */
#define TPIU_OUTEXTCTL_PORT_26      (0x04000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x04000000 */
#define TPIU_OUTEXTCTL_PORT_27      (0x08000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x08000000 */
#define TPIU_OUTEXTCTL_PORT_28      (0x10000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x10000000 */
#define TPIU_OUTEXTCTL_PORT_29      (0x20000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x20000000 */
#define TPIU_OUTEXTCTL_PORT_30      (0x40000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x40000000 */
#define TPIU_OUTEXTCTL_PORT_31      (0x80000000UL << REGISTER_FIELD_OFFSET(TPIU, OUTEXTCTL, PORT))  /*!< Value 0x80000000 */

/*!< Integration test trigger in and flush in acknowledge register */
#define TPIU_ITTRFLINACK_FLUSHINACK_OFFSET  (1U)
#define TPIU_ITTRFLINACK_FLUSHINACK_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITTRFLINACK, FLUSHINACK))  /*!< Mask  0x00000002 */

#define TPIU_ITTRFLINACK_TRIGINACK_OFFSET   (0U)
#define TPIU_ITTRFLINACK_TRIGINACK_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITTRFLINACK, TRIGINACK))   /*!< Mask  0x00000001 */

/*!< Integration test trigger in and flush in register */
#define TPIU_ITTRFLIN_FLUSHIN_OFFSET  (1U)
#define TPIU_ITTRFLIN_FLUSHIN_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITTRFLIN, FLUSHIN))  /*!< Mask  0x00000002 */

#define TPIU_ITTRFLIN_TRIGIN_OFFSET   (0U)
#define TPIU_ITTRFLIN_TRIGIN_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITTRFLIN, TRIGIN))   /*!< Mask  0x00000001 */

/*!< Integration test AMBA Trace Bus (ATB) data 0 register */
#define TPIU_ITATBDATA0_ATDATA31_OFFSET  (4U)
#define TPIU_ITATBDATA0_ATDATA31_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBDATA0, ATDATA31))  /*!< Mask  0x00000010 */

#define TPIU_ITATBDATA0_ATDATA23_OFFSET  (3U)
#define TPIU_ITATBDATA0_ATDATA23_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBDATA0, ATDATA23))  /*!< Mask  0x00000008 */

#define TPIU_ITATBDATA0_ATDATA15_OFFSET  (2U)
#define TPIU_ITATBDATA0_ATDATA15_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBDATA0, ATDATA15))  /*!< Mask  0x00000004 */

#define TPIU_ITATBDATA0_ATDATA7_OFFSET   (1U)
#define TPIU_ITATBDATA0_ATDATA7_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBDATA0, ATDATA7))   /*!< Mask  0x00000002 */

#define TPIU_ITATBDATA0_ATDATA0_OFFSET   (0U)
#define TPIU_ITATBDATA0_ATDATA0_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBDATA0, ATDATA0))   /*!< Mask  0x00000001 */

/*!< Integration test AMBA Trace Bus (ATB) control 2 register */
#define TPIU_ITATBCTR2_AFVALIDS_OFFSET  (1U)
#define TPIU_ITATBCTR2_AFVALIDS_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR2, AFVALIDS))  /*!< Mask  0x00000002 */

#define TPIU_ITATBCTR2_ATREADYS_OFFSET  (0U)
#define TPIU_ITATBCTR2_ATREADYS_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR2, ATREADYS))  /*!< Mask  0x00000001 */

/*!< Integration test AMBA Trace Bus (ATB) control 1 register */
#define TPIU_ITATBCTR1_ATID_OFFSET  (0U)
#define TPIU_ITATBCTR1_ATID_MASK    (0x3FUL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Mask  0x0000003F */
#define TPIU_ITATBCTR1_ATID_0       (0x01UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Value 0x00000001 */
#define TPIU_ITATBCTR1_ATID_1       (0x02UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Value 0x00000002 */
#define TPIU_ITATBCTR1_ATID_2       (0x04UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Value 0x00000004 */
#define TPIU_ITATBCTR1_ATID_3       (0x08UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Value 0x00000008 */
#define TPIU_ITATBCTR1_ATID_4       (0x10UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Value 0x00000010 */
#define TPIU_ITATBCTR1_ATID_5       (0x20UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Value 0x00000020 */
#define TPIU_ITATBCTR1_ATID_6       (0x40UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR1, ATID))  /*!< Value 0x00000040 */

/*!< Integration test AMBA Trace Bus (ATB) control 0 register */
#define TPIU_ITATBCTR0_ATBYTES_OFFSET  (8U)
#define TPIU_ITATBCTR0_ATBYTES_MASK    (0x3UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR0, ATBYTES))  /*!< Mask  0x00000300 */

#define TPIU_ITATBCTR0_AFREADY_OFFSET  (1U)
#define TPIU_ITATBCTR0_AFREADY_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR0, ATREADY))  /*!< Mask  0x00000002 */

#define TPIU_ITATBCTR0_ATVALID_OFFSET  (0U)
#define TPIU_ITATBCTR0_ATVALID_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITATBCTR0, AFVALID))  /*!< Mask  0x00000001 */

/*!< Integration mode control register */
#define TPIU_ITCTRL_IME_OFFSET  (0U)
#define TPIU_ITCTRL_IME_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, ITCTRL, IME))  /*!< Mask  0x00000001 */

/*!< Claim tag set register */
#define TPIU_CLAIMSET_CLAIMSET_OFFSET  (0U)
#define TPIU_CLAIMSET_CLAIMSET_MASK    (0xFUL << REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, CLAIMSET))  /*!< Mask  0x0000000F */

// Values of claim tag set register bits
#define TPIU_CLAIMSET_BIT3_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, CLAIMSET) + TPIU_CLAIM_BIT3)
#define TPIU_CLAIMSET_BIT3_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, BIT3))  /*!< Mask  0x00000008 */

#define TPIU_CLAIMSET_BIT2_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, CLAIMSET) + TPIU_CLAIM_BIT2)
#define TPIU_CLAIMSET_BIT2_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, BIT2))  /*!< Mask  0x00000004 */

#define TPIU_CLAIMSET_BIT1_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, CLAIMSET) + TPIU_CLAIM_BIT1)
#define TPIU_CLAIMSET_BIT1_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, BIT1))  /*!< Mask  0x00000002 */

#define TPIU_CLAIMSET_BIT0_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, CLAIMSET) + TPIU_CLAIM_BIT0)
#define TPIU_CLAIMSET_BIT0_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMSET, BIT0))  /*!< Mask  0x00000001 */

/*!< Claim tag clear register */
#define TPIU_CLAIMCLR_CLAIMCLR_OFFSET  (0U)
#define TPIU_CLAIMCLR_CLAIMCLR_MASK    (0xFUL << REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, CLAIMCLR))  /*!< Mask  0x0000000F */

// Values of claim tag clear register bits
#define TPIU_CLAIMCLR_BIT3_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, CLAIMCLR) + TPIU_CLAIM_BIT3)
#define TPIU_CLAIMCLR_BIT3_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, BIT3))  /*!< Mask  0x00000008 */

#define TPIU_CLAIMCLR_BIT2_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, CLAIMCLR) + TPIU_CLAIM_BIT2)
#define TPIU_CLAIMCLR_BIT2_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, BIT2))  /*!< Mask  0x00000004 */

#define TPIU_CLAIMCLR_BIT1_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, CLAIMCLR) + TPIU_CLAIM_BIT1)
#define TPIU_CLAIMCLR_BIT1_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, BIT1))  /*!< Mask  0x00000002 */

#define TPIU_CLAIMCLR_BIT0_OFFSET  (REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, CLAIMCLR) + TPIU_CLAIM_BIT0)
#define TPIU_CLAIMCLR_BIT0_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CLAIMCLR, BIT0))  /*!< Mask  0x00000001 */

/*!< CoreSight lock access register */
#define TPIU_LAR_KEY_OFFSET  (0U)
#define TPIU_LAR_KEY_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Mask  0xFFFFFFFF */
#define TPIU_LAR_KEY_0       (0x00000001UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000001 */
#define TPIU_LAR_KEY_1       (0x00000002UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000002 */
#define TPIU_LAR_KEY_2       (0x00000004UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000004 */
#define TPIU_LAR_KEY_3       (0x00000008UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000008 */
#define TPIU_LAR_KEY_4       (0x00000010UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000010 */
#define TPIU_LAR_KEY_5       (0x00000020UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000020 */
#define TPIU_LAR_KEY_6       (0x00000040UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000040 */
#define TPIU_LAR_KEY_7       (0x00000080UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000080 */
#define TPIU_LAR_KEY_8       (0x00000100UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000100 */
#define TPIU_LAR_KEY_9       (0x00000200UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000200 */
#define TPIU_LAR_KEY_10      (0x00000400UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000400 */
#define TPIU_LAR_KEY_11      (0x00000800UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00000800 */
#define TPIU_LAR_KEY_12      (0x00001000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00001000 */
#define TPIU_LAR_KEY_13      (0x00002000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00002000 */
#define TPIU_LAR_KEY_14      (0x00004000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00004000 */
#define TPIU_LAR_KEY_15      (0x00008000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00008000 */
#define TPIU_LAR_KEY_16      (0x00010000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00010000 */
#define TPIU_LAR_KEY_17      (0x00020000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00020000 */
#define TPIU_LAR_KEY_18      (0x00040000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00040000 */
#define TPIU_LAR_KEY_19      (0x00080000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00080000 */
#define TPIU_LAR_KEY_20      (0x00100000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00100000 */
#define TPIU_LAR_KEY_21      (0x00200000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00200000 */
#define TPIU_LAR_KEY_22      (0x00400000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00400000 */
#define TPIU_LAR_KEY_23      (0x00800000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x00800000 */
#define TPIU_LAR_KEY_24      (0x01000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x01000000 */
#define TPIU_LAR_KEY_25      (0x02000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x02000000 */
#define TPIU_LAR_KEY_26      (0x04000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x04000000 */
#define TPIU_LAR_KEY_27      (0x08000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x08000000 */
#define TPIU_LAR_KEY_28      (0x10000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x10000000 */
#define TPIU_LAR_KEY_29      (0x20000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x20000000 */
#define TPIU_LAR_KEY_30      (0x40000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x40000000 */
#define TPIU_LAR_KEY_31      (0x80000000UL << REGISTER_FIELD_OFFSET(TPIU, LAR, KEY))  /*!< Value 0x80000000 */

/*!< CoreSight lock status register */
#define TPIU_LSR_NTT_OFFSET  (2U)
#define TPIU_LSR_NTT_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, LSR, NTT))  /*!< Mask  0x00000004 */

#define TPIU_LSR_SLK_OFFSET  (1U)
#define TPIU_LSR_SLK_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, LSR, SLK))  /*!< Mask  0x00000002 */

#define TPIU_LSR_SLI_OFFSET  (0U)
#define TPIU_LSR_SLI_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, LSR, SLI))  /*!< Mask  0x00000001 */

/*!< Authentication status register */
#define TPIU_AUTHSTAT_SNID_OFFSET   (6U)
#define TPIU_AUTHSTAT_SNID_MASK     (0x3UL << REGISTER_FIELD_OFFSET(TPIU, AUTHSTAT, SNID))   /*!< Mask  0x000000C0 - security level for secure non-invasive debug */

#define TPIU_AUTHSTAT_SID_OFFSET    (4U)
#define TPIU_AUTHSTAT_SID_MASK      (0x3UL << REGISTER_FIELD_OFFSET(TPIU, AUTHSTAT, SID))    /*!< Mask  0x00000030 - security level for secure invasive debug */

#define TPIU_AUTHSTAT_NSNID_OFFSET  (2U)
#define TPIU_AUTHSTAT_NSNID_MASK    (0x3UL << REGISTER_FIELD_OFFSET(TPIU, AUTHSTAT, NSNID))  /*!< Mask  0x0000000C - security level for non secure non-invasive debug */

#define TPIU_AUTHSTAT_NSID_OFFSET   (0U)
#define TPIU_AUTHSTAT_NSID_MASK     (0x3UL << REGISTER_FIELD_OFFSET(TPIU, AUTHSTAT, NSID))   /*!< Mask  0x00000003 - security level for non secure invasive debug */

/*!< Device configuration register */
#define TPIU_DEVID_NRZVALID_OFFSET   (11U)
#define TPIU_DEVID_NRZVALID_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, DEVID, NRZVALID))   /*!< Mask  0x00000800 */

#define TPIU_DEVID_MANCVALID_OFFSET  (10U)
#define TPIU_DEVID_MANCVALID_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, DEVID, MANCVALID))  /*!< Mask  0x00000400 */

#define TPIU_DEVID_PTINVALID_OFFSET  (9U)
#define TPIU_DEVID_PTINVALID_MASK    (0x1UL << REGISTER_FIELD_OFFSET(TPIU, DEVID, PTINVALID))  /*!< Mask  0x00000200 */

#define TPIU_DEVID_FIFOSZ_OFFSET     (6U)
#define TPIU_DEVID_FIFOSZ_MASK       (0x7UL << REGISTER_FIELD_OFFSET(TPIU, DEVID, FIFOSZ))     /*!< Mask  0x000001C0 */

#define TPIU_DEVID_CLKRELAT_OFFSET   (5U)
#define TPIU_DEVID_CLKRELAT_MASK     (0x1UL << REGISTER_FIELD_OFFSET(TPIU, DEVID, CLKRELAT))   /*!< Mask  0x00000020 */

#define TPIU_DEVID_MAXNUM_OFFSET     (0U)
#define TPIU_DEVID_MAXNUM_MASK       (0x1FUL << REGISTER_FIELD_OFFSET(TPIU, DEVID, MAXNUM))    /*!< Mask  0x0000001F */

// Values of register bit stating the support of serial wire output (SWO) using universal asynchronous receiver-transmitter (UART) or non-return-to-zero (NRZ)
#define TPIU_SWOUARTNRZ_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_SWOUARTNRZ_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of register bit stating the support of serial wire output (SWO) using Manchester format
#define TPIU_SWOMANCHESTERFORMAT_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_SWOMANCHESTERFORMAT_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of parallel trace port operation support bit
#define TPIU_TRACECLKDATA_NOTSUPPORTED  (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_TRACECLKDATA_SUPPORTED     (0x1UL)  /*!< Value 0x00000001 */

// Values of square root of the number of 4K blocks register
#define TPIU_FIFOSIZE_1    (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_FIFOSIZE_2    (0x1UL)  /*!< Value 0x00000001 */
#define TPIU_FIFOSIZE_4    (0x2UL)  /*!< Value 0x00000002 */
#define TPIU_FIFOSIZE_8    (0x3UL)  /*!< Value 0x00000003 */
#define TPIU_FIFOSIZE_16   (0x4UL)  /*!< Value 0x00000004 */
#define TPIU_FIFOSIZE_32   (0x5UL)  /*!< Value 0x00000005 */
#define TPIU_FIFOSIZE_64   (0x6UL)  /*!< Value 0x00000006 */
#define TPIU_FIFOSIZE_128  (0x7UL)  /*!< Value 0x00000007 */

// Values of software lock status bit
#define TPIU_ATBTRACECLKRELATIONSHIP_SYNCHRONOUS   (0x0UL)  /*!< Value 0x00000000 */
#define TPIU_ATBTRACECLKRELATIONSHIP_ASYNCHRONOUS  (0x1UL)  /*!< Value 0x00000001 */

// Values of the register storing the number/type of AMBA Trace Bus (ATB) input port multiplexing
#define TPIU_NUMATBINPUTPORT_NONE  (0x00UL)  /*!< Value 0x00000000 */
#define TPIU_NUMATBINPUTPORT_1     (0x01UL)  /*!< Value 0x00000001 */
#define TPIU_NUMATBINPUTPORT_2     (0x02UL)  /*!< Value 0x00000002 */
#define TPIU_NUMATBINPUTPORT_3     (0x03UL)  /*!< Value 0x00000003 */
#define TPIU_NUMATBINPUTPORT_4     (0x04UL)  /*!< Value 0x00000004 */
#define TPIU_NUMATBINPUTPORT_5     (0x05UL)  /*!< Value 0x00000005 */
#define TPIU_NUMATBINPUTPORT_6     (0x06UL)  /*!< Value 0x00000006 */
#define TPIU_NUMATBINPUTPORT_7     (0x07UL)  /*!< Value 0x00000007 */
#define TPIU_NUMATBINPUTPORT_8     (0x08UL)  /*!< Value 0x00000008 */
#define TPIU_NUMATBINPUTPORT_9     (0x09UL)  /*!< Value 0x00000009 */
#define TPIU_NUMATBINPUTPORT_10    (0x0AUL)  /*!< Value 0x0000000A */
#define TPIU_NUMATBINPUTPORT_11    (0x0BUL)  /*!< Value 0x0000000B */
#define TPIU_NUMATBINPUTPORT_12    (0x0CUL)  /*!< Value 0x0000000C */
#define TPIU_NUMATBINPUTPORT_13    (0x0DUL)  /*!< Value 0x0000000D */
#define TPIU_NUMATBINPUTPORT_14    (0x0EUL)  /*!< Value 0x0000000E */
#define TPIU_NUMATBINPUTPORT_15    (0x0FUL)  /*!< Value 0x0000000F */
#define TPIU_NUMATBINPUTPORT_16    (0x10UL)  /*!< Value 0x00000010 */
#define TPIU_NUMATBINPUTPORT_17    (0x11UL)  /*!< Value 0x00000011 */
#define TPIU_NUMATBINPUTPORT_18    (0x12UL)  /*!< Value 0x00000012 */
#define TPIU_NUMATBINPUTPORT_19    (0x13UL)  /*!< Value 0x00000013 */
#define TPIU_NUMATBINPUTPORT_20    (0x14UL)  /*!< Value 0x00000014 */
#define TPIU_NUMATBINPUTPORT_21    (0x15UL)  /*!< Value 0x00000015 */
#define TPIU_NUMATBINPUTPORT_22    (0x16UL)  /*!< Value 0x00000016 */
#define TPIU_NUMATBINPUTPORT_23    (0x17UL)  /*!< Value 0x00000017 */
#define TPIU_NUMATBINPUTPORT_24    (0x18UL)  /*!< Value 0x00000018 */
#define TPIU_NUMATBINPUTPORT_25    (0x19UL)  /*!< Value 0x00000019 */
#define TPIU_NUMATBINPUTPORT_26    (0x1AUL)  /*!< Value 0x0000001A */
#define TPIU_NUMATBINPUTPORT_27    (0x1BUL)  /*!< Value 0x0000001B */
#define TPIU_NUMATBINPUTPORT_28    (0x1CUL)  /*!< Value 0x0000001C */
#define TPIU_NUMATBINPUTPORT_29    (0x1DUL)  /*!< Value 0x0000001D */
#define TPIU_NUMATBINPUTPORT_30    (0x1EUL)  /*!< Value 0x0000001E */
#define TPIU_NUMATBINPUTPORT_31    (0x1FUL)  /*!< Value 0x0000001F */

/*!< Device type register */
#define TPIU_DEVTYPE_SUBTYPE_OFFSET    (4U)
#define TPIU_DEVTYPE_SUBTYPE_MASK      (0xFUL << REGISTER_FIELD_OFFSET(TPIU, DEVTYPE, SUBTYPE))    /*!< Mask  0x000000F0 */

#define TPIU_DEVTYPE_MAJORTYPE_OFFSET  (0U)
#define TPIU_DEVTYPE_MAJORTYPE_MASK    (0xFUL << REGISTER_FIELD_OFFSET(TPIU, DEVTYPE, MAJORTYPE))  /*!< Mask  0x0000000F */

// Values of the sub-classification register
#define TPIU_SUBTYPE_TRACEPORT  (0x1UL)  /*!< Value 0x00000001 */

// Values of the major classification register
#define TPIU_MAJORTYPE_TRACESINK  (0x1UL)  /*!< Value 0x00000001 */

/*!< Peripheral identitication 4 register */
#define TPIU_PIDR4_4KCOUNT_OFFSET    (4U)
#define TPIU_PIDR4_4KCOUNT_MASK      (0xFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, 4KCOUNT))    /*!< Mask  0x000000F0 */
#define TPIU_PIDR4_4KCOUNT_0         (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, 4KCOUNT))    /*!< Value 0x00000010 */
#define TPIU_PIDR4_4KCOUNT_1         (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, 4KCOUNT))    /*!< Value 0x00000020 */
#define TPIU_PIDR4_4KCOUNT_2         (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, 4KCOUNT))    /*!< Value 0x00000040 */
#define TPIU_PIDR4_4KCOUNT_3         (0x8UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, 4KCOUNT))    /*!< Value 0x00000080 */

#define TPIU_PIDR4_JEP106CON_OFFSET  (0U)
#define TPIU_PIDR4_JEP106CON_MASK    (0xFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, JEP106CON))  /*!< Mask  0x0000000F */
#define TPIU_PIDR4_JEP106CON_0       (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, JEP106CON))  /*!< Value 0x00000001 */
#define TPIU_PIDR4_JEP106CON_1       (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, JEP106CON))  /*!< Value 0x00000002 */
#define TPIU_PIDR4_JEP106CON_2       (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, JEP106CON))  /*!< Value 0x00000004 */
#define TPIU_PIDR4_JEP106CON_3       (0x8UL << REGISTER_FIELD_OFFSET(TPIU, PIDR4, JEP106CON))  /*!< Value 0x00000008 */

// Values of JEDEC JEP 106 continuation code in peripheral identification 4 register
#define TPIU_PIDR4JEP106_VALUE  (0x4UL)  /*!< Value 0x00000004 */

/*!< Peripheral identitication 5 register */
#define TPIU_PIDR5_RSVD_OFFSET  (0U)
#define TPIU_PIDR5_RSVD_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Mask  0xFFFFFFFF */
#define TPIU_PIDR5_RSVD_0       (0x00000001UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000001 */
#define TPIU_PIDR5_RSVD_1       (0x00000002UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000002 */
#define TPIU_PIDR5_RSVD_2       (0x00000004UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000004 */
#define TPIU_PIDR5_RSVD_3       (0x00000008UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000008 */
#define TPIU_PIDR5_RSVD_4       (0x00000010UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000010 */
#define TPIU_PIDR5_RSVD_5       (0x00000020UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000020 */
#define TPIU_PIDR5_RSVD_6       (0x00000040UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000040 */
#define TPIU_PIDR5_RSVD_7       (0x00000080UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000080 */
#define TPIU_PIDR5_RSVD_8       (0x00000100UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000100 */
#define TPIU_PIDR5_RSVD_9       (0x00000200UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000200 */
#define TPIU_PIDR5_RSVD_10      (0x00000400UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000400 */
#define TPIU_PIDR5_RSVD_11      (0x00000800UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00000800 */
#define TPIU_PIDR5_RSVD_12      (0x00001000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00001000 */
#define TPIU_PIDR5_RSVD_13      (0x00002000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00002000 */
#define TPIU_PIDR5_RSVD_14      (0x00004000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00004000 */
#define TPIU_PIDR5_RSVD_15      (0x00008000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00008000 */
#define TPIU_PIDR5_RSVD_16      (0x00010000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00010000 */
#define TPIU_PIDR5_RSVD_17      (0x00020000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00020000 */
#define TPIU_PIDR5_RSVD_18      (0x00040000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00040000 */
#define TPIU_PIDR5_RSVD_19      (0x00080000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00080000 */
#define TPIU_PIDR5_RSVD_20      (0x00100000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00100000 */
#define TPIU_PIDR5_RSVD_21      (0x00200000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00200000 */
#define TPIU_PIDR5_RSVD_22      (0x00400000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00400000 */
#define TPIU_PIDR5_RSVD_23      (0x00800000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x00800000 */
#define TPIU_PIDR5_RSVD_24      (0x01000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x01000000 */
#define TPIU_PIDR5_RSVD_25      (0x02000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x02000000 */
#define TPIU_PIDR5_RSVD_26      (0x04000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x04000000 */
#define TPIU_PIDR5_RSVD_27      (0x08000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x08000000 */
#define TPIU_PIDR5_RSVD_28      (0x10000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x10000000 */
#define TPIU_PIDR5_RSVD_29      (0x20000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x20000000 */
#define TPIU_PIDR5_RSVD_30      (0x40000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x40000000 */
#define TPIU_PIDR5_RSVD_31      (0x80000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR5, RSVD))  /*!< Value 0x80000000 */

/*!< Peripheral identitication 6 register */
#define TPIU_PIDR6_RSVD_OFFSET  (0U)
#define TPIU_PIDR6_RSVD_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Mask  0xFFFFFFFF */
#define TPIU_PIDR6_RSVD_0       (0x00000001UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000001 */
#define TPIU_PIDR6_RSVD_1       (0x00000002UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000002 */
#define TPIU_PIDR6_RSVD_2       (0x00000004UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000004 */
#define TPIU_PIDR6_RSVD_3       (0x00000008UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000008 */
#define TPIU_PIDR6_RSVD_4       (0x00000010UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000010 */
#define TPIU_PIDR6_RSVD_5       (0x00000020UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000020 */
#define TPIU_PIDR6_RSVD_6       (0x00000040UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000040 */
#define TPIU_PIDR6_RSVD_7       (0x00000080UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000080 */
#define TPIU_PIDR6_RSVD_8       (0x00000100UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000100 */
#define TPIU_PIDR6_RSVD_9       (0x00000200UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000200 */
#define TPIU_PIDR6_RSVD_10      (0x00000400UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000400 */
#define TPIU_PIDR6_RSVD_11      (0x00000800UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00000800 */
#define TPIU_PIDR6_RSVD_12      (0x00001000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00001000 */
#define TPIU_PIDR6_RSVD_13      (0x00002000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00002000 */
#define TPIU_PIDR6_RSVD_14      (0x00004000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00004000 */
#define TPIU_PIDR6_RSVD_15      (0x00008000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00008000 */
#define TPIU_PIDR6_RSVD_16      (0x00010000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00010000 */
#define TPIU_PIDR6_RSVD_17      (0x00020000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00020000 */
#define TPIU_PIDR6_RSVD_18      (0x00040000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00040000 */
#define TPIU_PIDR6_RSVD_19      (0x00080000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00080000 */
#define TPIU_PIDR6_RSVD_20      (0x00100000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00100000 */
#define TPIU_PIDR6_RSVD_21      (0x00200000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00200000 */
#define TPIU_PIDR6_RSVD_22      (0x00400000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00400000 */
#define TPIU_PIDR6_RSVD_23      (0x00800000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x00800000 */
#define TPIU_PIDR6_RSVD_24      (0x01000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x01000000 */
#define TPIU_PIDR6_RSVD_25      (0x02000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x02000000 */
#define TPIU_PIDR6_RSVD_26      (0x04000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x04000000 */
#define TPIU_PIDR6_RSVD_27      (0x08000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x08000000 */
#define TPIU_PIDR6_RSVD_28      (0x10000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x10000000 */
#define TPIU_PIDR6_RSVD_29      (0x20000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x20000000 */
#define TPIU_PIDR6_RSVD_30      (0x40000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x40000000 */
#define TPIU_PIDR6_RSVD_31      (0x80000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR6, RSVD))  /*!< Value 0x80000000 */

/*!< Peripheral identitication 7 register */
#define TPIU_PIDR7_RSVD_OFFSET  (0U)
#define TPIU_PIDR7_RSVD_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Mask  0xFFFFFFFF */
#define TPIU_PIDR7_RSVD_0       (0x00000001UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000001 */
#define TPIU_PIDR7_RSVD_1       (0x00000002UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000002 */
#define TPIU_PIDR7_RSVD_2       (0x00000004UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000004 */
#define TPIU_PIDR7_RSVD_3       (0x00000008UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000008 */
#define TPIU_PIDR7_RSVD_4       (0x00000010UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000010 */
#define TPIU_PIDR7_RSVD_5       (0x00000020UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000020 */
#define TPIU_PIDR7_RSVD_6       (0x00000040UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000040 */
#define TPIU_PIDR7_RSVD_7       (0x00000080UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000080 */
#define TPIU_PIDR7_RSVD_8       (0x00000100UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000100 */
#define TPIU_PIDR7_RSVD_9       (0x00000200UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000200 */
#define TPIU_PIDR7_RSVD_10      (0x00000400UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000400 */
#define TPIU_PIDR7_RSVD_11      (0x00000800UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00000800 */
#define TPIU_PIDR7_RSVD_12      (0x00001000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00001000 */
#define TPIU_PIDR7_RSVD_13      (0x00002000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00002000 */
#define TPIU_PIDR7_RSVD_14      (0x00004000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00004000 */
#define TPIU_PIDR7_RSVD_15      (0x00008000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00008000 */
#define TPIU_PIDR7_RSVD_16      (0x00010000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00010000 */
#define TPIU_PIDR7_RSVD_17      (0x00020000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00020000 */
#define TPIU_PIDR7_RSVD_18      (0x00040000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00040000 */
#define TPIU_PIDR7_RSVD_19      (0x00080000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00080000 */
#define TPIU_PIDR7_RSVD_20      (0x00100000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00100000 */
#define TPIU_PIDR7_RSVD_21      (0x00200000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00200000 */
#define TPIU_PIDR7_RSVD_22      (0x00400000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00400000 */
#define TPIU_PIDR7_RSVD_23      (0x00800000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x00800000 */
#define TPIU_PIDR7_RSVD_24      (0x01000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x01000000 */
#define TPIU_PIDR7_RSVD_25      (0x02000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x02000000 */
#define TPIU_PIDR7_RSVD_26      (0x04000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x04000000 */
#define TPIU_PIDR7_RSVD_27      (0x08000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x08000000 */
#define TPIU_PIDR7_RSVD_28      (0x10000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x10000000 */
#define TPIU_PIDR7_RSVD_29      (0x20000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x20000000 */
#define TPIU_PIDR7_RSVD_30      (0x40000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x40000000 */
#define TPIU_PIDR7_RSVD_31      (0x80000000UL << REGISTER_FIELD_OFFSET(TPIU, PIDR7, RSVD))  /*!< Value 0x80000000 */

/*!< Peripheral identitication 0 register */
#define TPIU_PIDR0_PARTNUM_OFFSET  (0U)
#define TPIU_PIDR0_PARTNUM_MASK    (0xFFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Mask  0x000000FF */
#define TPIU_PIDR0_PARTNUM_0       (0x01UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000001 */
#define TPIU_PIDR0_PARTNUM_1       (0x02UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000002 */
#define TPIU_PIDR0_PARTNUM_2       (0x04UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000004 */
#define TPIU_PIDR0_PARTNUM_3       (0x08UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000008 */
#define TPIU_PIDR0_PARTNUM_4       (0x10UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000010 */
#define TPIU_PIDR0_PARTNUM_5       (0x20UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000020 */
#define TPIU_PIDR0_PARTNUM_6       (0x40UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000040 */
#define TPIU_PIDR0_PARTNUM_7       (0x80UL << REGISTER_FIELD_OFFSET(TPIU, PIDR0, PARTNUM))  /*!< Value 0x00000080 */

// Values of part number register
#define TPIU_PIDR0PARTNUM_ST   (0x12UL)  /*!< Value 0x00000012 */
#define TPIU_PIDR0PARTNUM_ARM  (0x75UL)  /*!< Value 0x00000075 */

/*!< Peripheral identitication 1 register */
#define TPIU_PIDR1_JEP106ID_OFFSET  (4U)
#define TPIU_PIDR1_JEP106ID_MASK    (0xFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, JEP106ID))  /*!< Mask  0x000000F0 */
#define TPIU_PIDR1_JEP106ID_0       (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, JEP106ID))  /*!< Value 0x00000010 */
#define TPIU_PIDR1_JEP106ID_1       (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, JEP106ID))  /*!< Value 0x00000020 */
#define TPIU_PIDR1_JEP106ID_2       (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, JEP106ID))  /*!< Value 0x00000040 */
#define TPIU_PIDR1_JEP106ID_3       (0x8UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, JEP106ID))  /*!< Value 0x00000080 */

#define TPIU_PIDR1_PARTNUM_OFFSET   (0U)
#define TPIU_PIDR1_PARTNUM_MASK     (0xFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, PARTNUM))   /*!< Mask  0x0000000F */
#define TPIU_PIDR1_PARTNUM_0        (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, PARTNUM))   /*!< Value 0x00000001 */
#define TPIU_PIDR1_PARTNUM_1        (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, PARTNUM))   /*!< Value 0x00000002 */
#define TPIU_PIDR1_PARTNUM_2        (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, PARTNUM))   /*!< Value 0x00000004 */
#define TPIU_PIDR1_PARTNUM_3        (0x8UL << REGISTER_FIELD_OFFSET(TPIU, PIDR1, PARTNUM))   /*!< Value 0x00000008 */

// Values of part number register
#define TPIU_PIDR1PARTNUM_ARM  (0x9UL)  /*!< Value 0x00000009 */

// Values of JEDEC JEP 106 ID code in peripheral identification 1 register
#define TPIU_PIDR1JEP106ID_VALUE  (0xBUL)  /*!< Value 0x0000000B */

/*!< Peripheral identitication 2 register */
#define TPIU_PIDR2_REVISION_OFFSET    (4U)
#define TPIU_PIDR2_REVISION_MASK      (0xFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, REVISION))    /*!< Mask  0x000000F0 */
#define TPIU_PIDR2_REVISION_0         (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, REVISION))    /*!< Value 0x00000010 */
#define TPIU_PIDR2_REVISION_1         (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, REVISION))    /*!< Value 0x00000020 */
#define TPIU_PIDR2_REVISION_2         (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, REVISION))    /*!< Value 0x00000040 */
#define TPIU_PIDR2_REVISION_3         (0x8UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, REVISION))    /*!< Value 0x00000080 */

#define TPIU_PIDR2_JEDEC_OFFSET       (3U)
#define TPIU_PIDR2_JEDEC_MASK         (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, JEDEC))       /*!< Mask  0x00000008 */

#define TPIU_PIDR2_JEDEC106ID_OFFSET  (0U)
#define TPIU_PIDR2_JEDEC106ID_MASK    (0x7UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, JEDEC106ID))  /*!< Mask  0x00000007 */
#define TPIU_PIDR2_JEDEC106ID_0       (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, JEDEC106ID))  /*!< Value 0x00000001 */
#define TPIU_PIDR2_JEDEC106ID_1       (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, JEDEC106ID))  /*!< Value 0x00000002 */
#define TPIU_PIDR2_JEDEC106ID_2       (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR2, JEDEC106ID))  /*!< Value 0x00000004 */

// Values of revision number register
#define TPIU_REVISION_VALUE  (0x5UL)  /*!< Value 0x00000005 */

// Values of JEDEC assigned value select bit
#define TPIU_JEDEC_VALUE  (0x1UL)  /*!< Value 0x00000001 */

// Values of JEDEC JEP 106 ID code in peripheral identification 2 register
#define TPIU_PIDR2JEP106ID_VALUE  (0x3UL)  /*!< Value 0x00000003 */

/*!< Peripheral identitication 3 register */
#define TPIU_PIDR3_REVAND_OFFSET  (4U)
#define TPIU_PIDR3_REVAND_MASK    (0xFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, REVAND))  /*!< Mask  0x000000F0 */
#define TPIU_PIDR3_REVAND_0       (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, REVAND))  /*!< Value 0x00000010 */
#define TPIU_PIDR3_REVAND_1       (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, REVAND))  /*!< Value 0x00000020 */
#define TPIU_PIDR3_REVAND_2       (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, REVAND))  /*!< Value 0x00000040 */
#define TPIU_PIDR3_REVAND_3       (0x8UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, REVAND))  /*!< Value 0x00000080 */

#define TPIU_PIDR3_CMOD_OFFSET    (0U)
#define TPIU_PIDR3_CMOD_MASK      (0xFUL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, CMOD))    /*!< Mask  0x0000000F */
#define TPIU_PIDR3_CMOD_0         (0x1UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, CMOD))    /*!< Value 0x00000001 */
#define TPIU_PIDR3_CMOD_1         (0x2UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, CMOD))    /*!< Value 0x00000002 */
#define TPIU_PIDR3_CMOD_2         (0x4UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, CMOD))    /*!< Value 0x00000004 */
#define TPIU_PIDR3_CMOD_3         (0x8UL << REGISTER_FIELD_OFFSET(TPIU, PIDR3, CMOD))    /*!< Value 0x00000008 */

// Values of manifacturer revision number register
#define TPIU_REVAND_VALUE  (0x0UL)  /*!< Value 0x00000000 */

// Values of JEDEC JEP 106 ID code in peripheral identification 2 register
#define TPIU_CMOD_ARM  (0x0UL)  /*!< Value 0x00000000 */

/*!< Component identitication 0 register */
#define TPIU_CIDR0_PREAMBLE_OFFSET  (0U)
#define TPIU_CIDR0_PREAMBLE_MASK    (0xFFUL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Mask  0x000000FF */
#define TPIU_CIDR0_PREAMBLE_0       (0x01UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000001 */
#define TPIU_CIDR0_PREAMBLE_1       (0x02UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000002 */
#define TPIU_CIDR0_PREAMBLE_2       (0x04UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000004 */
#define TPIU_CIDR0_PREAMBLE_3       (0x08UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000008 */
#define TPIU_CIDR0_PREAMBLE_4       (0x10UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000010 */
#define TPIU_CIDR0_PREAMBLE_5       (0x20UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000020 */
#define TPIU_CIDR0_PREAMBLE_6       (0x40UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000040 */
#define TPIU_CIDR0_PREAMBLE_7       (0x80UL << REGISTER_FIELD_OFFSET(TPIU, CIDR0, PREAMBLE))  /*!< Value 0x00000080 */

// Values of component identifier in component identification 0 register
#define TPIU_CIDR0PREAMBLE_VALUE  (0x0DUL)  /*!< Value 0x0000000D */

/*!< Component identitication 1 register */
#define TPIU_CIDR1_CLASS_OFFSET      (4U)
#define TPIU_CIDR1_CLASS_MASK        (0xFUL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, CLASS))      /*!< Mask  0x000000F0 */
#define TPIU_CIDR1_CLASS_0           (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, CLASS))      /*!< Value 0x00000010 */
#define TPIU_CIDR1_CLASS_1           (0x2UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, CLASS))      /*!< Value 0x00000020 */
#define TPIU_CIDR1_CLASS_2           (0x4UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, CLASS))      /*!< Value 0x00000040 */
#define TPIU_CIDR1_CLASS_3           (0x8UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, CLASS))      /*!< Value 0x00000080 */

#define TPIU_CIDR1_PREAMBLE_OFFSET   (0U)
#define TPIU_CIDR1_PREAMBLE_MASK     (0xFUL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, PREAMBLE))   /*!< Mask  0x0000000F */
#define TPIU_CIDR1_PREAMBLE_0        (0x1UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, PREAMBLE))   /*!< Value 0x00000001 */
#define TPIU_CIDR1_PREAMBLE_1        (0x2UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, PREAMBLE))   /*!< Value 0x00000002 */
#define TPIU_CIDR1_PREAMBLE_2        (0x4UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, PREAMBLE))   /*!< Value 0x00000004 */
#define TPIU_CIDR1_PREAMBLE_3        (0x8UL << REGISTER_FIELD_OFFSET(TPIU, CIDR1, PREAMBLE))   /*!< Value 0x00000008 */

// Values of component identifier in component identification 1 register
#define TPIU_CIDR1PREAMBLE_VALUE  (0x0UL)  /*!< Value 0x00000000 */

// Values of debug component with CoreSight-compatible registers
#define TPIU_CLASS_ARM  (0x1UL)  /*!< Value 0x00000001 */
#define TPIU_CLASS_ST   (0x9UL)  /*!< Value 0x00000009 */

/*!< Component identitication 2 register */
#define TPIU_CIDR2_PREAMBLE_OFFSET  (0U)
#define TPIU_CIDR2_PREAMBLE_MASK    (0xFFUL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Mask  0x000000FF */
#define TPIU_CIDR2_PREAMBLE_0       (0x01UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000001 */
#define TPIU_CIDR2_PREAMBLE_1       (0x02UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000002 */
#define TPIU_CIDR2_PREAMBLE_2       (0x04UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000004 */
#define TPIU_CIDR2_PREAMBLE_3       (0x08UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000008 */
#define TPIU_CIDR2_PREAMBLE_4       (0x10UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000010 */
#define TPIU_CIDR2_PREAMBLE_5       (0x20UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000020 */
#define TPIU_CIDR2_PREAMBLE_6       (0x40UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000040 */
#define TPIU_CIDR2_PREAMBLE_7       (0x80UL << REGISTER_FIELD_OFFSET(TPIU, CIDR2, PREAMBLE))  /*!< Value 0x00000080 */

// Values of component identifier in component identification 2 register
#define TPIU_CIDR2PREAMBLE_VALUE  (0x05UL)  /*!< Value 0x00000005 */

/*!< Component identitication 3 register */
#define TPIU_CIDR3_PREAMBLE_OFFSET  (0U)
#define TPIU_CIDR3_PREAMBLE_MASK    (0xFFUL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Mask  0x000000FF */
#define TPIU_CIDR3_PREAMBLE_0       (0x01UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000001 */
#define TPIU_CIDR3_PREAMBLE_1       (0x02UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000002 */
#define TPIU_CIDR3_PREAMBLE_2       (0x04UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000004 */
#define TPIU_CIDR3_PREAMBLE_3       (0x08UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000008 */
#define TPIU_CIDR3_PREAMBLE_4       (0x10UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000010 */
#define TPIU_CIDR3_PREAMBLE_5       (0x20UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000020 */
#define TPIU_CIDR3_PREAMBLE_6       (0x40UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000040 */
#define TPIU_CIDR3_PREAMBLE_7       (0x80UL << REGISTER_FIELD_OFFSET(TPIU, CIDR3, PREAMBLE))  /*!< Value 0x00000080 */

// Values of component identifier in component identification 3 register
#define TPIU_CIDR3PREAMBLE_VALUE  (0xB1UL)  /*!< Value 0x000000B1 */

/** @} */ // End of TPIU group

/** @} */ // End of RegisterGroup group

#endif // TPIU_H
