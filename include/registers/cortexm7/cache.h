#ifndef CACHE_REGISTERS_H
#define CACHE_REGISTERS_H
/**
 * @copyright
 * @file cache.h
 * @author Andrea Gianarda
 * @date 29th of April 2021
 * @brief Cache registers
*/

#include <stdint.h>

/**
 *  @defgroup RegisterGroup Register global macros, structure and functions
 *  @brief Registers global macros, structure and functions
 *  @{
 */

/**
 *  @ingroup RegisterGroup
 *  @defgroup Cache Cache register
 *  @brief Cache macros and structures
 *  @{
 */

typedef struct {
	WO uint32_t ICIALLU;        /*!< I-Cache invalidate all to points of unification (PoU) register                                       (Offset 0x0)          */
	   uint32_t reserved0;      /*!< Reserved                                                                                             (Offset 0x4)          */
	WO uint32_t ICIMVAU;        /*!< I-Cache invalidate by modified virtual address (MVA) to point of unification (PoU) register          (Offset 0x8)          */
	WO uint32_t DCIMVAC;        /*!< D-Cache invalidate by modified virtual address (MVA) to point of coherency (PoC) register            (Offset 0xC)          */
	WO uint32_t DCISW;          /*!< D-Cache invalidate by set-way register                                                               (Offset 0x10)         */
	WO uint32_t DCCMVAU;        /*!< D-Cache clean by modified virtual address (MVA) to point of unification (PoU) register               (Offset 0x14)         */
	WO uint32_t DCCMVAC;        /*!< D-Cache clean by modified virtual address (MVA) to point of coherency (PoC) register                 (Offset 0x18)         */
	WO uint32_t DCCSW;          /*!< D-Cache clean by set-way register                                                                    (Offset 0x1C)         */
	WO uint32_t DCCIMVAC;       /*!< D-Cache clean and invalidate by modified virtual address (MVA) to point of coherency (PoC) register  (Offset 0x20)         */
	WO uint32_t DCCISW;         /*!< D-Cache clean and invalidate by set-way register                                                     (Offset 0x24)         */
	WO uint32_t BPIALL;         /*!< Branch predictor invalidate all register                                                             (Offset 0x28)         */
	   uint32_t reserved1[2U];  /*!< Reserved                                                                                             (Offset 0x2C to 0x30) */
} cache_regs;

/*!< Cache registers */
/*!< I-Cache invalidate all to points of unification (PoU) register */
#define CACHE_ICIALLU_VALUE_OFFSET  (0U)
#define CACHE_ICIALLU_VALUE_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Mask  0xFFFFFFFF */
#define CACHE_ICIALLU_VALUE_0       (0x00000001UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000001 */
#define CACHE_ICIALLU_VALUE_1       (0x00000002UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000002 */
#define CACHE_ICIALLU_VALUE_2       (0x00000004UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000004 */
#define CACHE_ICIALLU_VALUE_3       (0x00000008UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000008 */
#define CACHE_ICIALLU_VALUE_4       (0x00000010UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000010 */
#define CACHE_ICIALLU_VALUE_5       (0x00000020UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000020 */
#define CACHE_ICIALLU_VALUE_6       (0x00000040UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000040 */
#define CACHE_ICIALLU_VALUE_7       (0x00000080UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000080 */
#define CACHE_ICIALLU_VALUE_8       (0x00000100UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000100 */
#define CACHE_ICIALLU_VALUE_9       (0x00000200UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000200 */
#define CACHE_ICIALLU_VALUE_10      (0x00000400UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000400 */
#define CACHE_ICIALLU_VALUE_11      (0x00000800UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00000800 */
#define CACHE_ICIALLU_VALUE_12      (0x00001000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00001000 */
#define CACHE_ICIALLU_VALUE_13      (0x00002000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00002000 */
#define CACHE_ICIALLU_VALUE_14      (0x00004000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00004000 */
#define CACHE_ICIALLU_VALUE_15      (0x00008000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00008000 */
#define CACHE_ICIALLU_VALUE_16      (0x00010000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00010000 */
#define CACHE_ICIALLU_VALUE_17      (0x00020000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00020000 */
#define CACHE_ICIALLU_VALUE_18      (0x00040000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00040000 */
#define CACHE_ICIALLU_VALUE_19      (0x00080000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00080000 */
#define CACHE_ICIALLU_VALUE_20      (0x00100000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00100000 */
#define CACHE_ICIALLU_VALUE_21      (0x00200000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00200000 */
#define CACHE_ICIALLU_VALUE_22      (0x00400000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00400000 */
#define CACHE_ICIALLU_VALUE_23      (0x00800000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x00800000 */
#define CACHE_ICIALLU_VALUE_24      (0x01000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x01000000 */
#define CACHE_ICIALLU_VALUE_25      (0x02000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x02000000 */
#define CACHE_ICIALLU_VALUE_26      (0x04000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x04000000 */
#define CACHE_ICIALLU_VALUE_27      (0x08000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x08000000 */
#define CACHE_ICIALLU_VALUE_28      (0x10000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x10000000 */
#define CACHE_ICIALLU_VALUE_29      (0x20000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x20000000 */
#define CACHE_ICIALLU_VALUE_30      (0x40000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x40000000 */
#define CACHE_ICIALLU_VALUE_31      (0x80000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIALLU, VALUE))  /*!< Value 0x80000000 */

/*!< I-Cache invalidate by modified virtual address (MVA) to point of unification (PoU) register */
#define CACHE_ICIMVAU_ADDRESS_OFFSET  (0U)
#define CACHE_ICIMVAU_ADDRESS_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Mask  0xFFFFFFFF */
#define CACHE_ICIMVAU_ADDRESS_0       (0x00000001UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000001 */
#define CACHE_ICIMVAU_ADDRESS_1       (0x00000002UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000002 */
#define CACHE_ICIMVAU_ADDRESS_2       (0x00000004UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000004 */
#define CACHE_ICIMVAU_ADDRESS_3       (0x00000008UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000008 */
#define CACHE_ICIMVAU_ADDRESS_4       (0x00000010UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000010 */
#define CACHE_ICIMVAU_ADDRESS_5       (0x00000020UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000020 */
#define CACHE_ICIMVAU_ADDRESS_6       (0x00000040UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000040 */
#define CACHE_ICIMVAU_ADDRESS_7       (0x00000080UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000080 */
#define CACHE_ICIMVAU_ADDRESS_8       (0x00000100UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000100 */
#define CACHE_ICIMVAU_ADDRESS_9       (0x00000200UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000200 */
#define CACHE_ICIMVAU_ADDRESS_10      (0x00000400UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000400 */
#define CACHE_ICIMVAU_ADDRESS_11      (0x00000800UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00000800 */
#define CACHE_ICIMVAU_ADDRESS_12      (0x00001000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00001000 */
#define CACHE_ICIMVAU_ADDRESS_13      (0x00002000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00002000 */
#define CACHE_ICIMVAU_ADDRESS_14      (0x00004000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00004000 */
#define CACHE_ICIMVAU_ADDRESS_15      (0x00008000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00008000 */
#define CACHE_ICIMVAU_ADDRESS_16      (0x00010000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00010000 */
#define CACHE_ICIMVAU_ADDRESS_17      (0x00020000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00020000 */
#define CACHE_ICIMVAU_ADDRESS_18      (0x00040000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00040000 */
#define CACHE_ICIMVAU_ADDRESS_19      (0x00080000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00080000 */
#define CACHE_ICIMVAU_ADDRESS_20      (0x00100000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00100000 */
#define CACHE_ICIMVAU_ADDRESS_21      (0x00200000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00200000 */
#define CACHE_ICIMVAU_ADDRESS_22      (0x00400000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00400000 */
#define CACHE_ICIMVAU_ADDRESS_23      (0x00800000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x00800000 */
#define CACHE_ICIMVAU_ADDRESS_24      (0x01000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x01000000 */
#define CACHE_ICIMVAU_ADDRESS_25      (0x02000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x02000000 */
#define CACHE_ICIMVAU_ADDRESS_26      (0x04000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x04000000 */
#define CACHE_ICIMVAU_ADDRESS_27      (0x08000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x08000000 */
#define CACHE_ICIMVAU_ADDRESS_28      (0x10000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x10000000 */
#define CACHE_ICIMVAU_ADDRESS_29      (0x20000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x20000000 */
#define CACHE_ICIMVAU_ADDRESS_30      (0x40000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x40000000 */
#define CACHE_ICIMVAU_ADDRESS_31      (0x80000000UL << REGISTER_FIELD_OFFSET(CACHE, ICIMVAU, ADDRESS))  /*!< Value 0x80000000 */

/*!< D-Cache invalidate by modified virtual address (MVA) to point of coherency (PoC) register */
#define CACHE_DCIMVAC_ADDRESS_OFFSET  (0U)
#define CACHE_DCIMVAC_ADDRESS_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Mask  0xFFFFFFFF */
#define CACHE_DCIMVAC_ADDRESS_0       (0x00000001UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000001 */
#define CACHE_DCIMVAC_ADDRESS_1       (0x00000002UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000002 */
#define CACHE_DCIMVAC_ADDRESS_2       (0x00000004UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000004 */
#define CACHE_DCIMVAC_ADDRESS_3       (0x00000008UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000008 */
#define CACHE_DCIMVAC_ADDRESS_4       (0x00000010UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000010 */
#define CACHE_DCIMVAC_ADDRESS_5       (0x00000020UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000020 */
#define CACHE_DCIMVAC_ADDRESS_6       (0x00000040UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000040 */
#define CACHE_DCIMVAC_ADDRESS_7       (0x00000080UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000080 */
#define CACHE_DCIMVAC_ADDRESS_8       (0x00000100UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000100 */
#define CACHE_DCIMVAC_ADDRESS_9       (0x00000200UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000200 */
#define CACHE_DCIMVAC_ADDRESS_10      (0x00000400UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000400 */
#define CACHE_DCIMVAC_ADDRESS_11      (0x00000800UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00000800 */
#define CACHE_DCIMVAC_ADDRESS_12      (0x00001000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00001000 */
#define CACHE_DCIMVAC_ADDRESS_13      (0x00002000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00002000 */
#define CACHE_DCIMVAC_ADDRESS_14      (0x00004000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00004000 */
#define CACHE_DCIMVAC_ADDRESS_15      (0x00008000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00008000 */
#define CACHE_DCIMVAC_ADDRESS_16      (0x00010000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00010000 */
#define CACHE_DCIMVAC_ADDRESS_17      (0x00020000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00020000 */
#define CACHE_DCIMVAC_ADDRESS_18      (0x00040000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00040000 */
#define CACHE_DCIMVAC_ADDRESS_19      (0x00080000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00080000 */
#define CACHE_DCIMVAC_ADDRESS_20      (0x00100000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00100000 */
#define CACHE_DCIMVAC_ADDRESS_21      (0x00200000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00200000 */
#define CACHE_DCIMVAC_ADDRESS_22      (0x00400000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00400000 */
#define CACHE_DCIMVAC_ADDRESS_23      (0x00800000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x00800000 */
#define CACHE_DCIMVAC_ADDRESS_24      (0x01000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x01000000 */
#define CACHE_DCIMVAC_ADDRESS_25      (0x02000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x02000000 */
#define CACHE_DCIMVAC_ADDRESS_26      (0x04000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x04000000 */
#define CACHE_DCIMVAC_ADDRESS_27      (0x08000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x08000000 */
#define CACHE_DCIMVAC_ADDRESS_28      (0x10000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x10000000 */
#define CACHE_DCIMVAC_ADDRESS_29      (0x20000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x20000000 */
#define CACHE_DCIMVAC_ADDRESS_30      (0x40000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x40000000 */
#define CACHE_DCIMVAC_ADDRESS_31      (0x80000000UL << REGISTER_FIELD_OFFSET(CACHE, DCIMVAC, ADDRESS))  /*!< Value 0x80000000 */

/*!< D-Cache invalidate by modified virtual address (MVA) to point of coherency (PoC) register */
// bits [31:(32-log2(associativity))] i.e. [31:30]
// Data cache associativity is 4 for the cortex M7
#define CACHE_DCISW_WAY_OFFSET    (30U)
#define CACHE_DCISW_WAY_MASK      (0x3UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, WAY))    /*!< Mask  0xC0000000 */
#define CACHE_DCISW_WAY_0         (0x1UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, WAY))    /*!< Value 0x40000000 */
#define CACHE_DCISW_WAY_1         (0x2UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, WAY))    /*!< Value 0x80000000 */

// bits [(log2(lineLength)+log2(numberOfSets)-1):log2(lineLength)] i.e. [14:5]
// Data cache line length is 32 bytes for the cortex M7
// aximum data cache number of sets is 512 for the cortex M7
#define CACHE_DCISW_SET_OFFSET    (5U)
#define CACHE_DCISW_SET_MASK      (0x1FFUL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Mask  0x00001FE0 */
#define CACHE_DCISW_SET_0         (0x001UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00000020 */
#define CACHE_DCISW_SET_1         (0x002UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00000040 */
#define CACHE_DCISW_SET_2         (0x004UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00000080 */
#define CACHE_DCISW_SET_3         (0x008UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00000100 */
#define CACHE_DCISW_SET_4         (0x010UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00000200 */
#define CACHE_DCISW_SET_5         (0x020UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00000400 */
#define CACHE_DCISW_SET_6         (0x040UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00000800 */
#define CACHE_DCISW_SET_7         (0x080UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00001000 */
#define CACHE_DCISW_SET_8         (0x100UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, SET))  /*!< Value 0x00002000 */

#define CACHE_DCISW_LEVEL_OFFSET  (0U)
#define CACHE_DCISW_LEVEL_MASK    (0xEUL << REGISTER_FIELD_OFFSET(CACHE, DCISW, LEVEL))  /*!< Mask  0x0000000E */
#define CACHE_DCISW_LEVEL_0       (0x2UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, LEVEL))  /*!< Value 0x00000002 */
#define CACHE_DCISW_LEVEL_1       (0x4UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, LEVEL))  /*!< Value 0x00000004 */
#define CACHE_DCISW_LEVEL_2       (0x8UL << REGISTER_FIELD_OFFSET(CACHE, DCISW, LEVEL))  /*!< Value 0x00000008 */

/*!< D-Cache clean by modified virtual address (MVA) to point of unification (PoU) register */
#define CACHE_DCCMVAU_ADDRESS_OFFSET  (0U)
#define CACHE_DCCMVAU_ADDRESS_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Mask  0xFFFFFFFF */
#define CACHE_DCCMVAU_ADDRESS_0       (0x00000001UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000001 */
#define CACHE_DCCMVAU_ADDRESS_1       (0x00000002UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000002 */
#define CACHE_DCCMVAU_ADDRESS_2       (0x00000004UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000004 */
#define CACHE_DCCMVAU_ADDRESS_3       (0x00000008UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000008 */
#define CACHE_DCCMVAU_ADDRESS_4       (0x00000010UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000010 */
#define CACHE_DCCMVAU_ADDRESS_5       (0x00000020UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000020 */
#define CACHE_DCCMVAU_ADDRESS_6       (0x00000040UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000040 */
#define CACHE_DCCMVAU_ADDRESS_7       (0x00000080UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000080 */
#define CACHE_DCCMVAU_ADDRESS_8       (0x00000100UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000100 */
#define CACHE_DCCMVAU_ADDRESS_9       (0x00000200UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000200 */
#define CACHE_DCCMVAU_ADDRESS_10      (0x00000400UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000400 */
#define CACHE_DCCMVAU_ADDRESS_11      (0x00000800UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00000800 */
#define CACHE_DCCMVAU_ADDRESS_12      (0x00001000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00001000 */
#define CACHE_DCCMVAU_ADDRESS_13      (0x00002000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00002000 */
#define CACHE_DCCMVAU_ADDRESS_14      (0x00004000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00004000 */
#define CACHE_DCCMVAU_ADDRESS_15      (0x00008000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00008000 */
#define CACHE_DCCMVAU_ADDRESS_16      (0x00010000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00010000 */
#define CACHE_DCCMVAU_ADDRESS_17      (0x00020000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00020000 */
#define CACHE_DCCMVAU_ADDRESS_18      (0x00040000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00040000 */
#define CACHE_DCCMVAU_ADDRESS_19      (0x00080000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00080000 */
#define CACHE_DCCMVAU_ADDRESS_20      (0x00100000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00100000 */
#define CACHE_DCCMVAU_ADDRESS_21      (0x00200000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00200000 */
#define CACHE_DCCMVAU_ADDRESS_22      (0x00400000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00400000 */
#define CACHE_DCCMVAU_ADDRESS_23      (0x00800000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x00800000 */
#define CACHE_DCCMVAU_ADDRESS_24      (0x01000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x01000000 */
#define CACHE_DCCMVAU_ADDRESS_25      (0x02000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x02000000 */
#define CACHE_DCCMVAU_ADDRESS_26      (0x04000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x04000000 */
#define CACHE_DCCMVAU_ADDRESS_27      (0x08000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x08000000 */
#define CACHE_DCCMVAU_ADDRESS_28      (0x10000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x10000000 */
#define CACHE_DCCMVAU_ADDRESS_29      (0x20000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x20000000 */
#define CACHE_DCCMVAU_ADDRESS_30      (0x40000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x40000000 */
#define CACHE_DCCMVAU_ADDRESS_31      (0x80000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAU, ADDRESS))  /*!< Value 0x80000000 */

/*!< D-Cache clean by modified virtual address (MVA) to point of coherency (PoC) register */
#define CACHE_DCCMVAC_ADDRESS_OFFSET  (0U)
#define CACHE_DCCMVAC_ADDRESS_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Mask  0xFFFFFFFF */
#define CACHE_DCCMVAC_ADDRESS_0       (0x00000001UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000001 */
#define CACHE_DCCMVAC_ADDRESS_1       (0x00000002UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000002 */
#define CACHE_DCCMVAC_ADDRESS_2       (0x00000004UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000004 */
#define CACHE_DCCMVAC_ADDRESS_3       (0x00000008UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000008 */
#define CACHE_DCCMVAC_ADDRESS_4       (0x00000010UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000010 */
#define CACHE_DCCMVAC_ADDRESS_5       (0x00000020UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000020 */
#define CACHE_DCCMVAC_ADDRESS_6       (0x00000040UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000040 */
#define CACHE_DCCMVAC_ADDRESS_7       (0x00000080UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000080 */
#define CACHE_DCCMVAC_ADDRESS_8       (0x00000100UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000100 */
#define CACHE_DCCMVAC_ADDRESS_9       (0x00000200UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000200 */
#define CACHE_DCCMVAC_ADDRESS_10      (0x00000400UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000400 */
#define CACHE_DCCMVAC_ADDRESS_11      (0x00000800UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00000800 */
#define CACHE_DCCMVAC_ADDRESS_12      (0x00001000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00001000 */
#define CACHE_DCCMVAC_ADDRESS_13      (0x00002000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00002000 */
#define CACHE_DCCMVAC_ADDRESS_14      (0x00004000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00004000 */
#define CACHE_DCCMVAC_ADDRESS_15      (0x00008000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00008000 */
#define CACHE_DCCMVAC_ADDRESS_16      (0x00010000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00010000 */
#define CACHE_DCCMVAC_ADDRESS_17      (0x00020000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00020000 */
#define CACHE_DCCMVAC_ADDRESS_18      (0x00040000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00040000 */
#define CACHE_DCCMVAC_ADDRESS_19      (0x00080000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00080000 */
#define CACHE_DCCMVAC_ADDRESS_20      (0x00100000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00100000 */
#define CACHE_DCCMVAC_ADDRESS_21      (0x00200000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00200000 */
#define CACHE_DCCMVAC_ADDRESS_22      (0x00400000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00400000 */
#define CACHE_DCCMVAC_ADDRESS_23      (0x00800000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x00800000 */
#define CACHE_DCCMVAC_ADDRESS_24      (0x01000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x01000000 */
#define CACHE_DCCMVAC_ADDRESS_25      (0x02000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x02000000 */
#define CACHE_DCCMVAC_ADDRESS_26      (0x04000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x04000000 */
#define CACHE_DCCMVAC_ADDRESS_27      (0x08000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x08000000 */
#define CACHE_DCCMVAC_ADDRESS_28      (0x10000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x10000000 */
#define CACHE_DCCMVAC_ADDRESS_29      (0x20000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x20000000 */
#define CACHE_DCCMVAC_ADDRESS_30      (0x40000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x40000000 */
#define CACHE_DCCMVAC_ADDRESS_31      (0x80000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCMVAC, ADDRESS))  /*!< Value 0x80000000 */

/*!< D-Cache clean by set-way register */
// bits [31:(32-log2(associativity))] i.e. [31:30]
// Data cache associativity is 4 for the cortex M7
#define CACHE_DCCSW_WAY_OFFSET    (30U)
#define CACHE_DCCSW_WAY_MASK      (0x3UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, WAY))    /*!< Mask  0xC0000000 */
#define CACHE_DCCSW_WAY_0         (0x1UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, WAY))    /*!< Value 0x40000000 */
#define CACHE_DCCSW_WAY_1         (0x2UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, WAY))    /*!< Value 0x80000000 */

// bits [(log2(lineLength)+log2(numberOfSets)-1):log2(lineLength)] i.e. [14:5]
// Data cache line length is 32 bytes for the cortex M7
// aximum data cache number of sets is 512 for the cortex M7
#define CACHE_DCCSW_SET_OFFSET    (5U)
#define CACHE_DCCSW_SET_MASK      (0x1FFUL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Mask  0x00001FE0 */
#define CACHE_DCCSW_SET_0         (0x001UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00000020 */
#define CACHE_DCCSW_SET_1         (0x002UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00000040 */
#define CACHE_DCCSW_SET_2         (0x004UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00000080 */
#define CACHE_DCCSW_SET_3         (0x008UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00000100 */
#define CACHE_DCCSW_SET_4         (0x010UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00000200 */
#define CACHE_DCCSW_SET_5         (0x020UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00000400 */
#define CACHE_DCCSW_SET_6         (0x040UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00000800 */
#define CACHE_DCCSW_SET_7         (0x080UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00001000 */
#define CACHE_DCCSW_SET_8         (0x100UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, SET))  /*!< Value 0x00002000 */

#define CACHE_DCCSW_LEVEL_OFFSET  (0U)
#define CACHE_DCCSW_LEVEL_MASK    (0xEUL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, LEVEL))  /*!< Mask  0x0000000E */
#define CACHE_DCCSW_LEVEL_0       (0x2UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, LEVEL))  /*!< Value 0x00000002 */
#define CACHE_DCCSW_LEVEL_1       (0x4UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, LEVEL))  /*!< Value 0x00000004 */
#define CACHE_DCCSW_LEVEL_2       (0x8UL << REGISTER_FIELD_OFFSET(CACHE, DCCSW, LEVEL))  /*!< Value 0x00000008 */

/*!< D-Cache clean and invalidate by modified virtual address (MVA) to point of coherency (PoC) register */
#define CACHE_DCCIMVAC_ADDRESS_OFFSET  (0U)
#define CACHE_DCCIMVAC_ADDRESS_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Mask  0xFFFFFFFF */
#define CACHE_DCCIMVAC_ADDRESS_0       (0x00000001UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000001 */
#define CACHE_DCCIMVAC_ADDRESS_1       (0x00000002UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000002 */
#define CACHE_DCCIMVAC_ADDRESS_2       (0x00000004UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000004 */
#define CACHE_DCCIMVAC_ADDRESS_3       (0x00000008UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000008 */
#define CACHE_DCCIMVAC_ADDRESS_4       (0x00000010UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000010 */
#define CACHE_DCCIMVAC_ADDRESS_5       (0x00000020UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000020 */
#define CACHE_DCCIMVAC_ADDRESS_6       (0x00000040UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000040 */
#define CACHE_DCCIMVAC_ADDRESS_7       (0x00000080UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000080 */
#define CACHE_DCCIMVAC_ADDRESS_8       (0x00000100UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000100 */
#define CACHE_DCCIMVAC_ADDRESS_9       (0x00000200UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000200 */
#define CACHE_DCCIMVAC_ADDRESS_10      (0x00000400UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000400 */
#define CACHE_DCCIMVAC_ADDRESS_11      (0x00000800UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00000800 */
#define CACHE_DCCIMVAC_ADDRESS_12      (0x00001000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00001000 */
#define CACHE_DCCIMVAC_ADDRESS_13      (0x00002000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00002000 */
#define CACHE_DCCIMVAC_ADDRESS_14      (0x00004000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00004000 */
#define CACHE_DCCIMVAC_ADDRESS_15      (0x00008000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00008000 */
#define CACHE_DCCIMVAC_ADDRESS_16      (0x00010000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00010000 */
#define CACHE_DCCIMVAC_ADDRESS_17      (0x00020000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00020000 */
#define CACHE_DCCIMVAC_ADDRESS_18      (0x00040000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00040000 */
#define CACHE_DCCIMVAC_ADDRESS_19      (0x00080000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00080000 */
#define CACHE_DCCIMVAC_ADDRESS_20      (0x00100000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00100000 */
#define CACHE_DCCIMVAC_ADDRESS_21      (0x00200000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00200000 */
#define CACHE_DCCIMVAC_ADDRESS_22      (0x00400000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00400000 */
#define CACHE_DCCIMVAC_ADDRESS_23      (0x00800000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x00800000 */
#define CACHE_DCCIMVAC_ADDRESS_24      (0x01000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x01000000 */
#define CACHE_DCCIMVAC_ADDRESS_25      (0x02000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x02000000 */
#define CACHE_DCCIMVAC_ADDRESS_26      (0x04000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x04000000 */
#define CACHE_DCCIMVAC_ADDRESS_27      (0x08000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x08000000 */
#define CACHE_DCCIMVAC_ADDRESS_28      (0x10000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x10000000 */
#define CACHE_DCCIMVAC_ADDRESS_29      (0x20000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x20000000 */
#define CACHE_DCCIMVAC_ADDRESS_30      (0x40000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x40000000 */
#define CACHE_DCCIMVAC_ADDRESS_31      (0x80000000UL << REGISTER_FIELD_OFFSET(CACHE, DCCIMVAC, ADDRESS))  /*!< Value 0x80000000 */

/*!< D-Cache clean and invalidate by set-way register */
// bits [31:(32-log2(associativity))] i.e. [31:30]
// Data cache associativity is 4 for the cortex M7
#define CACHE_DCCISW_WAY_OFFSET    (30U)
#define CACHE_DCCISW_WAY_MASK      (0x3UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, WAY))    /*!< Mask  0xC0000000 */
#define CACHE_DCCISW_WAY_0         (0x1UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, WAY))    /*!< Value 0x40000000 */
#define CACHE_DCCISW_WAY_1         (0x2UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, WAY))    /*!< Value 0x80000000 */

// bits [(log2(lineLength)+log2(numberOfSets)-1):log2(lineLength)] i.e. [14:5]
// Data cache line length is 32 bytes for the cortex M7
// aximum data cache number of sets is 512 for the cortex M7
#define CACHE_DCCISW_SET_OFFSET    (5U)
#define CACHE_DCCISW_SET_MASK      (0x1FFUL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Mask  0x00001FE0 */
#define CACHE_DCCISW_SET_0         (0x001UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00000020 */
#define CACHE_DCCISW_SET_1         (0x002UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00000040 */
#define CACHE_DCCISW_SET_2         (0x004UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00000080 */
#define CACHE_DCCISW_SET_3         (0x008UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00000100 */
#define CACHE_DCCISW_SET_4         (0x010UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00000200 */
#define CACHE_DCCISW_SET_5         (0x020UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00000400 */
#define CACHE_DCCISW_SET_6         (0x040UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00000800 */
#define CACHE_DCCISW_SET_7         (0x080UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00001000 */
#define CACHE_DCCISW_SET_8         (0x100UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, SET))  /*!< Value 0x00002000 */

#define CACHE_DCCISW_LEVEL_OFFSET  (0U)
#define CACHE_DCCISW_LEVEL_MASK    (0xEUL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, LEVEL))  /*!< Mask  0x0000000E */
#define CACHE_DCCISW_LEVEL_0       (0x2UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, LEVEL))  /*!< Value 0x00000002 */
#define CACHE_DCCISW_LEVEL_1       (0x4UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, LEVEL))  /*!< Value 0x00000004 */
#define CACHE_DCCISW_LEVEL_2       (0x8UL << REGISTER_FIELD_OFFSET(CACHE, DCCISW, LEVEL))  /*!< Value 0x00000008 */

/*!< Branch predictor invalidate all register */
#define CACHE_BPIALL_VALUE_OFFSET  (0U)
#define CACHE_BPIALL_VALUE_MASK    (0xFFFFFFFFUL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Mask  0xFFFFFFFF */
#define CACHE_BPIALL_VALUE_0       (0x00000001UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000001 */
#define CACHE_BPIALL_VALUE_1       (0x00000002UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000002 */
#define CACHE_BPIALL_VALUE_2       (0x00000004UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000004 */
#define CACHE_BPIALL_VALUE_3       (0x00000008UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000008 */
#define CACHE_BPIALL_VALUE_4       (0x00000010UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000010 */
#define CACHE_BPIALL_VALUE_5       (0x00000020UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000020 */
#define CACHE_BPIALL_VALUE_6       (0x00000040UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000040 */
#define CACHE_BPIALL_VALUE_7       (0x00000080UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000080 */
#define CACHE_BPIALL_VALUE_8       (0x00000100UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000100 */
#define CACHE_BPIALL_VALUE_9       (0x00000200UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000200 */
#define CACHE_BPIALL_VALUE_10      (0x00000400UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000400 */
#define CACHE_BPIALL_VALUE_11      (0x00000800UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00000800 */
#define CACHE_BPIALL_VALUE_12      (0x00001000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00001000 */
#define CACHE_BPIALL_VALUE_13      (0x00002000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00002000 */
#define CACHE_BPIALL_VALUE_14      (0x00004000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00004000 */
#define CACHE_BPIALL_VALUE_15      (0x00008000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00008000 */
#define CACHE_BPIALL_VALUE_16      (0x00010000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00010000 */
#define CACHE_BPIALL_VALUE_17      (0x00020000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00020000 */
#define CACHE_BPIALL_VALUE_18      (0x00040000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00040000 */
#define CACHE_BPIALL_VALUE_19      (0x00080000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00080000 */
#define CACHE_BPIALL_VALUE_20      (0x00100000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00100000 */
#define CACHE_BPIALL_VALUE_21      (0x00200000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00200000 */
#define CACHE_BPIALL_VALUE_22      (0x00400000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00400000 */
#define CACHE_BPIALL_VALUE_23      (0x00800000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x00800000 */
#define CACHE_BPIALL_VALUE_24      (0x01000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x01000000 */
#define CACHE_BPIALL_VALUE_25      (0x02000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x02000000 */
#define CACHE_BPIALL_VALUE_26      (0x04000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x04000000 */
#define CACHE_BPIALL_VALUE_27      (0x08000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x08000000 */
#define CACHE_BPIALL_VALUE_28      (0x10000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x10000000 */
#define CACHE_BPIALL_VALUE_29      (0x20000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x20000000 */
#define CACHE_BPIALL_VALUE_30      (0x40000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x40000000 */
#define CACHE_BPIALL_VALUE_31      (0x80000000UL << REGISTER_FIELD_OFFSET(CACHE, BPIALL, VALUE))  /*!< Value 0x80000000 */

// Values of cache level register
#define CACHE_LEVEL_L1  (0x0UL)  /*!< Value 0x00000000 */
#define CACHE_LEVEL_L2  (0x1UL)  /*!< Value 0x00000001 */
#define CACHE_LEVEL_L3  (0x2UL)  /*!< Value 0x00000002 */
#define CACHE_LEVEL_L4  (0x3UL)  /*!< Value 0x00000003 */
#define CACHE_LEVEL_L5  (0x4UL)  /*!< Value 0x00000004 */
#define CACHE_LEVEL_L6  (0x5UL)  /*!< Value 0x00000005 */
#define CACHE_LEVEL_L7  (0x6UL)  /*!< Value 0x00000006 */
#define CACHE_LEVEL_L8  (0x7UL)  /*!< Value 0x00000007 */

#define CACHE_OFFSET 0xF50UL
#define CACHE_BASE OFFSET_ADDRESS(SCS_BASE, CACHE_OFFSET)
#define CACHE REGISTER_PTR(cache_regs, CACHE_BASE)

/** @} */ // End of Cache group

/** @} */ // End of RegisterGroup group

#endif // CACHE_REGISTERS_H
