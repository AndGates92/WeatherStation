#ifndef POWER_H
#define POWER_H
/**
 * @copyright
 * @file power.h
 * @author Andrea Gianarda
 * @date 25th of February 2021
 * @brief Power registers
*/

#include <stdint.h>

#include "global/peripherals.h"

/**
 *  @defgroup RegisterGroup Register global macros, structure and functions
 *  @brief Registers global macros, structure and functions
 *  @{
 */

/**
 *  @ingroup RegisterGroup
 *  @defgroup Power Power control
 *  @brief Power control
 *  @{
 */

typedef struct {
	RW uint32_t CTRL1;        /*!< Power control 1 register (Offset 0x0) */
	RO uint32_t CS1;          /*!< Control status 1 register (Offset 0x4) */
	RW uint32_t CTRL2;        /*!< Power control 2 register (Offset 0x8) */
	RW uint32_t CTRL3;        /*!< Power control 3 register (Offset 0xC) */
	RW uint32_t CPU1CTRL;     /*!< CPU1 control register (Offset 0x10) */
	RW uint32_t CPU2CTRL;     /*!< CPU2 control register (Offset 0x14) */
	RW uint32_t D3CTRL;       /*!< Domain 3 control register (Offset 0x18) */
	RW uint32_t WAKEUPCLR;    /*!< Wakeup clear register (Offset 0x1C) */
	RO uint32_t WAKEUPFLAG;   /*!< Wakeup flag register (Offset 0x20) */
	RW uint32_t WAKEUPENPLR;  /*!< Wakeup enable and polarity register (Offset 0x24) */
} power_regs;

/*!< Power control registers */
/*!< Power control 1 register */
#define PWR_CTRL1_VTHAVD_OFFSET           (17U)
#define PWR_CTRL1_VTHAVD_MASK             (0x3UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHAVD))        /*!< Mask 0x00060000 */
#define PWR_CTRL1_VTHAVD_1_7V             (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHAVD))        /*!< Mask 0x00000000 */
#define PWR_CTRL1_VTHAVD_2_1V             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHAVD))        /*!< Mask 0x00020000 */
#define PWR_CTRL1_VTHAVD_2_5V             (0x2UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHAVD))        /*!< Mask 0x00040000 */
#define PWR_CTRL1_VTHAVD_2_8V             (0x3UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHAVD))        /*!< Mask 0x00060000 */

#define PWR_CTRL1_AVDEN_OFFSET            (16U)
#define PWR_CTRL1_AVDEN_MASK              (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, AVDEN))         /*!< Mask 0x00010000 */
#define PWR_CTRL1_AVDEN_DISABLE           (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, AVDEN))         /*!< Mask 0x00000000 */
#define PWR_CTRL1_AVDEN_ENABLE            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, AVDEN))         /*!< Mask 0x00010000 */

#define PWR_CTRL1_SYSSTOPVS_OFFSET        (14U)
#define PWR_CTRL1_SYSSTOPVS_MASK          (0x3UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, SYSSTOPVS))     /*!< Mask 0x0000C000 */
#define PWR_CTRL1_SYSSTOPVS_SCALE5        (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, SYSSTOPVS))     /*!< Mask 0x00004000 */
#define PWR_CTRL1_SYSSTOPVS_SCALE4        (0x2UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, SYSSTOPVS))     /*!< Mask 0x00008000 */
#define PWR_CTRL1_SYSSTOPVS_SCALE3        (0x3UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, SYSSTOPVS))     /*!< Mask 0x0000C000 */

#define PWR_CTRL1_FLASHLPSTOP_OFFSET      (9U)
#define PWR_CTRL1_FLASHLPSTOP_MASK        (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, FLASHLPSTOP))   /*!< Mask 0x00002000 */
#define PWR_CTRL1_FLASHLPSTOP_NORMALMODE  (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, FLASHLPSTOP))   /*!< Mask 0x00000000 */
#define PWR_CTRL1_FLASHLPSTOP_LPMODE      (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, FLASHLPSTOP))   /*!< Mask 0x00002000 */

#define PWR_CTRL1_DISBCKWRPROT_OFFSET     (8U)
#define PWR_CTRL1_DISBCKWRPROT_MASK       (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, DISBCKWRPROT))  /*!< Mask 0x00002000 */
#define PWR_CTRL1_DISBCKWRPROT_NORMALMODE (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, DISBCKWRPROT))  /*!< Mask 0x00000000 */
#define PWR_CTRL1_DISBCKWRPROT_LPMODE     (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, DISBCKWRPROT))  /*!< Mask 0x00002000 */

#define PWR_CTRL1_VTHPVD_OFFSET           (5U)
#define PWR_CTRL1_VTHPVD_MASK             (0x7UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x000000E0 */
#define PWR_CTRL1_VTHPVD_1_95V            (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x00000000 */
#define PWR_CTRL1_VTHPVD_2_10V            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x00000020 */
#define PWR_CTRL1_VTHPVD_2_25V            (0x2UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x00000040 */
#define PWR_CTRL1_VTHPVD_2_40V            (0x3UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x00000060 */
#define PWR_CTRL1_VTHPVD_2_55V            (0x4UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x00000080 */
#define PWR_CTRL1_VTHPVD_2_70V            (0x5UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x000000A0 */
#define PWR_CTRL1_VTHPVD_2_85V            (0x6UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x000000C0 */
#define PWR_CTRL1_VTHPVD_EXTERNAL         (0x7UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, VTHPVD))        /*!< Mask 0x000000E0 */

#define PWR_CTRL1_PVDEN_OFFSET            (4U)
#define PWR_CTRL1_PVDEN_MASK              (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, PVDEN))         /*!< Mask 0x00000010 */
#define PWR_CTRL1_PVDEN_DISABLE           (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, PVDEN))         /*!< Mask 0x00000000 */
#define PWR_CTRL1_PVDEN_ENABLE            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, PVDEN))         /*!< Mask 0x00000010 */

#define PWR_CTRL1_LPDSSVOS3_OFFSET        (0U)
#define PWR_CTRL1_LPDSSVOS3_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, LPDSSVOS3))     /*!< Mask 0x00000001 */
#define PWR_CTRL1_LPDSSVOS3_VRMAINMODE    (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, LPDSSVOS3))     /*!< Mask 0x00000000 */
#define PWR_CTRL1_LPDSSVOS3_VRLPMODE      (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL1, LPDSSVOS3))     /*!< Mask 0x00000001 */

/*!< Constrol status 1 register */
#define PWR_CS1_AVDO_OFFSET    (16U)
#define PWR_CS1_AVDO_MASK      (0x1UL << REGISTER_FIELD_OFFSET(PWR, CS1, AVDO))    /*!< Mask 0x00010000 */
#define PWR_CS1_AVDO_HEVTH     (0x0UL << REGISTER_FIELD_OFFSET(PWR, CS1, AVDO))    /*!< Mask 0x00000000 */
#define PWR_CS1_AVDO_LVTH      (0x1UL << REGISTER_FIELD_OFFSET(PWR, CS1, AVDO))    /*!< Mask 0x00010000 */

#define PWR_CS1_VOS_OFFSET     (14U)
#define PWR_CS1_VOS_MASK       (0x3UL << REGISTER_FIELD_OFFSET(PWR, CS1, VOS))     /*!< Mask 0x0000C000 */
#define PWR_CS1_VOS_0          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CS1, VOS))     /*!< Mask 0x00004000 */
#define PWR_CS1_VOS_1          (0x2UL << REGISTER_FIELD_OFFSET(PWR, CS1, VOS))     /*!< Mask 0x00008000 */

#define PWR_CS1_VSORDY_OFFSET  (13U)
#define PWR_CS1_VOSRDY_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, CS1, VOSRDY))  /*!< Mask 0x00002000 */

#define PWR_CS1_PVDO_OFFSET    (4U)
#define PWR_CS1_PVDO_MASK      (0x1UL << REGISTER_FIELD_OFFSET(PWR, CS1, PVDO))    /*!< Mask 0x00000010 */
#define PWR_CS1_PVDO_HEVTH     (0x0UL << REGISTER_FIELD_OFFSET(PWR, CS1, PVDO))    /*!< Mask 0x00000000 */
#define PWR_CS1_PVDO_LVTH      (0x1UL << REGISTER_FIELD_OFFSET(PWR, CS1, PVDO))    /*!< Mask 0x00000010 */

/*!< Power control 2 register */
#define PWR_CTRL2_TEMPH_OFFSET           (23U)
#define PWR_CTRL2_TEMPH_MASK             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, TEMPH))          /*!< Mask 0x00800000 */
#define PWR_CTRL2_TEMPH_TLOWERHVTH       (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, TEMPH))          /*!< Mask 0x00000000 */
#define PWR_CTRL2_TEMPH_THIGHEREQUALVTH  (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, TEMPH))          /*!< Mask 0x00800000 */

#define PWR_CTRL2_TEMPL_OFFSET           (22U)
#define PWR_CTRL2_TEMPL_MASK             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, TEMPL))          /*!< Mask 0x00400000 */
#define PWR_CTRL2_TEMPL_TLOWERHVTH       (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, TEMPL))          /*!< Mask 0x00000000 */
#define PWR_CTRL2_TEMPL_THIGHEREQUALVTH  (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, TEMPL))          /*!< Mask 0x00400000 */

#define PWR_CTRL2_VBATH_OFFSET           (21U)
#define PWR_CTRL2_VBATH_MASK             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATH))          /*!< Mask 0x00200000 */
#define PWR_CTRL2_VBATH_VLOWERHVTH       (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATH))          /*!< Mask 0x00000000 */
#define PWR_CTRL2_VBATH_VHIGHEREQUALVTH  (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATH))          /*!< Mask 0x00200000 */

#define PWR_CTRL2_VBATL_OFFSET           (20U)
#define PWR_CTRL2_VBATL_MASK             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATL))          /*!< Mask 0x00100000 */
#define PWR_CTRL2_VBATL_VLOWERHVTH       (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATL))          /*!< Mask 0x00000000 */
#define PWR_CTRL2_VBATL_VHIGHEREQUALVTH  (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATL))          /*!< Mask 0x00100000 */

#define PWR_CTRL2_BCKREGRDY_OFFSET       (16U)
#define PWR_CTRL2_BCKREGRDY_MASK         (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, BCKREGRDY))      /*!< Mask 0x00010000 */
#define PWR_CTRL2_BCKREGRDY_NOTREADY     (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, BCKREGRDY))      /*!< Mask 0x00000000 */
#define PWR_CTRL2_BCKREGRDY_READY        (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, BCKREGRDY))      /*!< Mask 0x00010000 */

#define PWR_CTRL2_VBATTEMPMONEN_OFFSET   (4U)
#define PWR_CTRL2_VBATTEMPMONEN_MASK     (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATTEMPMONEN))  /*!< Mask 0x00000010 */
#define PWR_CTRL2_VBATTEMPMONEN_DISABLE  (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATTEMPMONEN))  /*!< Mask 0x00000000 */
#define PWR_CTRL2_VBATTEMPMONEN_ENABLE   (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, VBATTEMPMONEN))  /*!< Mask 0x00000010 */

#define PWR_CTRL2_BCKREGEN_OFFSET        (0U)
#define PWR_CTRL2_BCKREGEN_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, BCKREGEN))       /*!< Mask 0x00000001 */
#define PWR_CTRL2_BCKREGEN_DISABLE       (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, BCKREGEN))       /*!< Mask 0x00000000 */
#define PWR_CTRL2_BCKREGEN_ENABLE        (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL2, BCKREGEN))       /*!< Mask 0x00000001 */

/*!< Power control 3 register */
#define PWR_CTRL3_USB33RDY_OFFSET                 (26U)
#define PWR_CTRL3_USB33RDY_MASK                   (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USB33RDY))             /*!< Mask 0x04000000 */
#define PWR_CTRL3_USB33RDY_NOTREADY               (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USB33RDY))             /*!< Mask 0x00000000 */
#define PWR_CTRL3_USB33RDY_READY                  (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USB33RDY))             /*!< Mask 0x04000000 */

#define PWR_CTRL3_USBREGEN_OFFSET                 (25U)
#define PWR_CTRL3_USBREGEN_MASK                   (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USBREGEN))             /*!< Mask 0x02000000 */
#define PWR_CTRL3_USBREGEN_DISABLE                (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USBREGEN))             /*!< Mask 0x00000000 */
#define PWR_CTRL3_USBREGEN_ENABLE                 (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USBREGEN))             /*!< Mask 0x02000000 */

#define PWR_CTRL3_USB33VDETEN_OFFSET              (24U)
#define PWR_CTRL3_USB33VDETEN_MASK                (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USB33VDETEN))          /*!< Mask 0x01000000 */
#define PWR_CTRL3_USB33VDETEN_DISABLE             (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USB33VDETEN))          /*!< Mask 0x00000000 */
#define PWR_CTRL3_USB33VDETEN_ENABLE              (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, USB33VDETEN))          /*!< Mask 0x01000000 */

#define PWR_CTRL3_STEPDOWNCONVRDY_OFFSET          (16U)
#define PWR_CTRL3_STEPDOWNCONVRDY_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVRDY))      /*!< Mask 0x00010000 */
#define PWR_CTRL3_STEPDOWNCONVRDY_NOTREADY        (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVRDY))      /*!< Mask 0x00000000 */
#define PWR_CTRL3_STEPDOWNCONVRDY_READY           (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVRDY))      /*!< Mask 0x00010000 */

#define PWR_CTRL3_VBATRSEL_OFFSET                 (9U)
#define PWR_CTRL3_VBATRSEL_MASK                   (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, VBATRSEL))             /*!< Mask 0x00000200 */
#define PWR_CTRL3_VBATRSEL_5K                     (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, VBATRSEL))             /*!< Mask 0x00000000 */
#define PWR_CTRL3_VBATRSEL_1_5K                   (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, VBATRSEL))             /*!< Mask 0x00000200 */

#define PWR_CTRL3_VBATEN_OFFSET                   (8U)
#define PWR_CTRL3_VBATEN_MASK                     (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, VBATEN))               /*!< Mask 0x00000100 */
#define PWR_CTRL3_VBATEN_DISABLE                  (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, VBATEN))               /*!< Mask 0x00000000 */
#define PWR_CTRL3_VBATEN_ENABLE                   (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, VBATEN))               /*!< Mask 0x00000100 */

#define PWR_CTRL3_STEPDOWNCONVVOUTSEL_OFFSET      (4U)
#define PWR_CTRL3_STEPDOWNCONVVOUTSEL_MASK        (0x3UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVVOUTSEL))  /*!< Mask 0x00000030 */
#define PWR_CTRL3_STEPDOWNCONVVOUTSEL_RESETVALUE  (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVVOUTSEL))  /*!< Mask 0x00000000 */
#define PWR_CTRL3_STEPDOWNCONVVOUTSEL_1_8V        (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVVOUTSEL))  /*!< Mask 0x00000010 */
#define PWR_CTRL3_STEPDOWNCONVVOUTSEL_2_5V        (0x2UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVVOUTSEL))  /*!< Mask 0x00000020 */

#define PWR_CTRL3_STEPDOWNCONVMODE_OFFSET         (3U)
#define PWR_CTRL3_STEPDOWNCONVMODE_MASK           (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVHPMODE))   /*!< Mask 0x00000008 */
#define PWR_CTRL3_STEPDOWNCONVMODE_NORMALMODE     (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVHPMODE))   /*!< Mask 0x00000000 */
#define PWR_CTRL3_STEPDOWNCONVMODE_MAINMODE       (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVHPMODE))   /*!< Mask 0x00000008 */

#define PWR_CTRL3_STEPDOWNCONVEN_OFFSET           (2U)
#define PWR_CTRL3_STEPDOWNCONVEN_MASK             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVEN))       /*!< Mask 0x00000004 */
#define PWR_CTRL3_STEPDOWNCONVEN_DISABLE          (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVEN))       /*!< Mask 0x00000000 */
#define PWR_CTRL3_STEPDOWNCONVEN_ENABLE           (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, STEPDOWNCONVEN))       /*!< Mask 0x00000004 */

#define PWR_CTRL3_LOWDROPOUTREGEN_OFFSET          (1U)
#define PWR_CTRL3_LOWDROPOUTREGEN_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, LOWDROPOUTREGEN))      /*!< Mask 0x00000002 */
#define PWR_CTRL3_LOWDROPOUTREGEN_DISABLE         (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, LOWDROPOUTREGEN))      /*!< Mask 0x00000000 */
#define PWR_CTRL3_LOWDROPOUTREGEN_ENABLE          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, LOWDROPOUTREGEN))      /*!< Mask 0x00000002 */

#define PWR_CTRL3_PWRMGMTBYPASS_OFFSET            (0U)
#define PWR_CTRL3_PWRMGMTBYPASS_MASK              (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, PWRMGMTBYPASS))        /*!< Mask 0x00000001 */
#define PWR_CTRL3_PWRMGMTBYPASS_DISABLE           (0x0UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, PWRMGMTBYPASS))        /*!< Mask 0x00000000 */
#define PWR_CTRL3_PWRMGMTBYPASS_ENABLE            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CTRL3, PWRMGMTBYPASS))        /*!< Mask 0x00000001 */

/*!< CPU1 power control register */
#define PWR_CPU1CTRL_D3RUNMODE_OFFSET            (11U)
#define PWR_CPU1CTRL_D3RUNMODE_MASK              (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D3RUNMODE))           /*!< Mask 0x00000800 */
#define PWR_CPU1CTRL_D3RUNMODE_FOLLOWSUBSYSMODE  (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D3RUNMODE))           /*!< Mask 0x00000000 */
#define PWR_CPU1CTRL_D3RUNMODE_ALWAYSON          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D3RUNMODE))           /*!< Mask 0x00000800 */

#define PWR_CPU1CTRL_CPU2HOLD_OFFSET             (10U)
#define PWR_CPU1CTRL_CPU2HOLD_MASK               (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, CPU2HOLD))            /*!< Mask 0x00000400 */
#define PWR_CPU1CTRL_CPU2HOLD_RUNAFTERWAKEUP     (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, CPU2HOLD))            /*!< Mask 0x00000000 */
#define PWR_CPU1CTRL_CPU2HOLD_KEEPONHOLD         (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, CPU2HOLD))            /*!< Mask 0x00000400 */

#define PWR_CPU1CTRL_D1FLAGSCLR_OFFSET           (9U)
#define PWR_CPU1CTRL_D1FLAGSCLR_MASK             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D1FLAGSCLR))          /*!< Mask 0x00000200 */
#define PWR_CPU1CTRL_D1FLAGSCLR_NOEFFECT         (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D1FLAGSCLR))          /*!< Mask 0x00000000 */
#define PWR_CPU1CTRL_D1FLAGSCLR_CLRFLAGS         (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D1FLAGSCLR))          /*!< Mask 0x00000200 */

#define PWR_CPU1CTRL_D2STANDBYFLAG_OFFSET        (8U)
#define PWR_CPU1CTRL_D2STANDBYFLAG_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D2STANDBYFLAG))       /*!< Mask 0x00000100 */

#define PWR_CPU1CTRL_D1STANDBYFLAG_OFFSET        (7U)
#define PWR_CPU1CTRL_D1STANDBYFLAG_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D1STANDBYFLAG))       /*!< Mask 0x00000080 */

#define PWR_CPU1CTRL_SYSSTANDBYFLAG_OFFSET       (6U)
#define PWR_CPU1CTRL_SYSSTANDBYFLAG_MASK         (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, SYSSTANDBYFLAG))      /*!< Mask 0x00000040 */

#define PWR_CPU1CTRL_STOPFLAG_OFFSET             (5U)
#define PWR_CPU1CTRL_STOPFLAG_MASK               (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, STOPFLAG))            /*!< Mask 0x00000020 */

#define PWR_CPU1CTRL_CPU2HOLDWAKEUPFLAG_OFFSET   (4U)
#define PWR_CPU1CTRL_CPU2HOLDWAKEUPFLAG_MASK     (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, CPU2HOLDWAKEUPFLAG))  /*!< Mask 0x00000010 */

#define PWR_CPU1CTRL_D3PWRDOWNDS_OFFSET          (2U)
#define PWR_CPU1CTRL_D3PWRDOWNDS_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D3PWRDOWNDS))         /*!< Mask 0x00000004 */
#define PWR_CPU1CTRL_D3PWRDOWNDS_KEEPSTOPMODE    (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D3PWRDOWNDS))         /*!< Mask 0x00000000 */
#define PWR_CPU1CTRL_D3PWRDOWNDS_ALLOWSTANDBY    (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D3PWRDOWNDS))         /*!< Mask 0x00000004 */

#define PWR_CPU1CTRL_D2PWRDOWNDS_OFFSET          (1U)
#define PWR_CPU1CTRL_D2PWRDOWNDS_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D2PWRDOWNDS))         /*!< Mask 0x00000002 */
#define PWR_CPU1CTRL_D2PWRDOWNDS_KEEPSTOPMODE    (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D2PWRDOWNDS))         /*!< Mask 0x00000000 */
#define PWR_CPU1CTRL_D2PWRDOWNDS_ALLOWSTANDBY    (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D2PWRDOWNDS))         /*!< Mask 0x00000002 */

#define PWR_CPU1CTRL_D1PWRDOWNDS_OFFSET          (0U)
#define PWR_CPU1CTRL_D1PWRDOWNDS_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D1PWRDOWNDS))         /*!< Mask 0x00000001 */
#define PWR_CPU1CTRL_D1PWRDOWNDS_KEEPSTOPMODE    (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D1PWRDOWNDS))         /*!< Mask 0x00000000 */
#define PWR_CPU1CTRL_D1PWRDOWNDS_ALLOWSTANDBY    (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU1CTRL, D1PWRDOWNDS))         /*!< Mask 0x00000001 */

/*!< CPU2 power control register */
#define PWR_CPU2CTRL_D3RUNMODE_OFFSET            (11U)
#define PWR_CPU2CTRL_D3RUNMODE_MASK              (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D3RUNMODE))           /*!< Mask 0x00000800 */
#define PWR_CPU2CTRL_D3RUNMODE_FOLLOWSUBSYSMODE  (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D3RUNMODE))           /*!< Mask 0x00000000 */
#define PWR_CPU2CTRL_D3RUNMODE_ALWAYSON          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D3RUNMODE))           /*!< Mask 0x00000800 */

#define PWR_CPU2CTRL_CPU2HOLD_OFFSET             (10U)
#define PWR_CPU2CTRL_CPU2HOLD_MASK               (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, CPU2HOLD))            /*!< Mask 0x00000400 */
#define PWR_CPU2CTRL_CPU2HOLD_RUNAFTERWAKEUP     (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, CPU2HOLD))            /*!< Mask 0x00000000 */
#define PWR_CPU2CTRL_CPU2HOLD_KEEPONHOLD         (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, CPU2HOLD))            /*!< Mask 0x00000400 */

#define PWR_CPU2CTRL_D1FLAGSCLR_OFFSET           (9U)
#define PWR_CPU2CTRL_D1FLAGSCLR_MASK             (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D1FLAGSCLR))          /*!< Mask 0x00000200 */
#define PWR_CPU2CTRL_D1FLAGSCLR_NOEFFECT         (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D1FLAGSCLR))          /*!< Mask 0x00000000 */
#define PWR_CPU2CTRL_D1FLAGSCLR_CLRFLAGS         (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D1FLAGSCLR))          /*!< Mask 0x00000200 */

#define PWR_CPU2CTRL_D2STANDBYFLAG_OFFSET        (8U)
#define PWR_CPU2CTRL_D2STANDBYFLAG_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D2STANDBYFLAG))       /*!< Mask 0x00000100 */

#define PWR_CPU2CTRL_D1STANDBYFLAG_OFFSET        (7U)
#define PWR_CPU2CTRL_D1STANDBYFLAG_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D1STANDBYFLAG))       /*!< Mask 0x00000080 */

#define PWR_CPU2CTRL_SYSSTANDBYFLAG_OFFSET       (6U)
#define PWR_CPU2CTRL_SYSSTANDBYFLAG_MASK         (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, SYSSTANDBYFLAG))      /*!< Mask 0x00000040 */

#define PWR_CPU2CTRL_STOPFLAG_OFFSET             (5U)
#define PWR_CPU2CTRL_STOPFLAG_MASK               (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, STOPFLAG))            /*!< Mask 0x00000020 */

#define PWR_CPU2CTRL_CPU2HOLDWAKEUPFLAG_OFFSET   (4U)
#define PWR_CPU2CTRL_CPU2HOLDWAKEUPFLAG_MASK     (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, CPU2HOLDWAKEUPFLAG))  /*!< Mask 0x00000010 */

#define PWR_CPU2CTRL_D3PWRDOWNDS_OFFSET          (2U)
#define PWR_CPU2CTRL_D3PWRDOWNDS_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D3PWRDOWNDS))         /*!< Mask 0x00000004 */
#define PWR_CPU2CTRL_D3PWRDOWNDS_KEEPSTOPMODE    (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D3PWRDOWNDS))         /*!< Mask 0x00000000 */
#define PWR_CPU2CTRL_D3PWRDOWNDS_ALLOWSTANDBY    (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D3PWRDOWNDS))         /*!< Mask 0x00000004 */

#define PWR_CPU2CTRL_D2PWRDOWNDS_OFFSET          (1U)
#define PWR_CPU2CTRL_D2PWRDOWNDS_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D2PWRDOWNDS))         /*!< Mask 0x00000002 */
#define PWR_CPU2CTRL_D2PWRDOWNDS_KEEPSTOPMODE    (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D2PWRDOWNDS))         /*!< Mask 0x00000000 */
#define PWR_CPU2CTRL_D2PWRDOWNDS_ALLOWSTANDBY    (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D2PWRDOWNDS))         /*!< Mask 0x00000002 */

#define PWR_CPU2CTRL_D1PWRDOWNDS_OFFSET          (0U)
#define PWR_CPU2CTRL_D1PWRDOWNDS_MASK            (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D1PWRDOWNDS))         /*!< Mask 0x00000001 */
#define PWR_CPU2CTRL_D1PWRDOWNDS_KEEPSTOPMODE    (0x0UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D1PWRDOWNDS))         /*!< Mask 0x00000000 */
#define PWR_CPU2CTRL_D1PWRDOWNDS_ALLOWSTANDBY    (0x1UL << REGISTER_FIELD_OFFSET(PWR, CPU2CTRL, D1PWRDOWNDS))         /*!< Mask 0x00000001 */

/*!< Domain 3 control register */
#define PWR_D3CTRL_VOS_OFFSET       (14U)
#define PWR_D3CTRL_VOS_MASK         (0x3UL << REGISTER_FIELD_OFFSET(PWR, D3CTRL, VOS))     /*!< Mask 0x000C0000 */
#define PWR_D3CTRL_VOS_SCALE3       (0x1UL << REGISTER_FIELD_OFFSET(PWR, D3CTRL, VOS))     /*!< Mask 0x00040000 */
#define PWR_D3CTRL_VOS_SCALE2       (0x2UL << REGISTER_FIELD_OFFSET(PWR, D3CTRL, VOS))     /*!< Mask 0x00080000 */
#define PWR_D3CTRL_VOS_SCALE1       (0x3UL << REGISTER_FIELD_OFFSET(PWR, D3CTRL, VOS))     /*!< Mask 0x000C0000 */

#define PWR_D3CTRL_VOSRDY_OFFSET    (13U)
#define PWR_D3CTRL_VOSRDY_MASK      (0x1UL << REGISTER_FIELD_OFFSET(PWR, D3CTRL, VOSRDY))  /*!< Mask 0x00020000 */
#define PWR_D3CTRL_VOSRDY_NOTREADY  (0x0UL << REGISTER_FIELD_OFFSET(PWR, D3CTRL, VOSRDY))  /*!< Mask 0x00000000 */
#define PWR_D3CTRL_VOSRDY_READY     (0x1UL << REGISTER_FIELD_OFFSET(PWR, D3CTRL, VOSRDY))  /*!< Mask 0x00020000 */

/*!< Wakeup clear register */
#define PWR_WAKEUPCLR_PIN6_OFFSET  (5U)
#define PWR_WAKEUPCLR_PIN6_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPCLR, PIN6))  /*!< Mask 0x00000020 */

#define PWR_WAKEUPCLR_PIN5_OFFSET  (4U)
#define PWR_WAKEUPCLR_PIN5_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPCLR, PIN5))  /*!< Mask 0x00000010 */

#define PWR_WAKEUPCLR_PIN4_OFFSET  (3U)
#define PWR_WAKEUPCLR_PIN4_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPCLR, PIN4))  /*!< Mask 0x00000008 */

#define PWR_WAKEUPCLR_PIN3_OFFSET  (2U)
#define PWR_WAKEUPCLR_PIN3_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPCLR, PIN3))  /*!< Mask 0x00000004 */

#define PWR_WAKEUPCLR_PIN2_OFFSET  (1U)
#define PWR_WAKEUPCLR_PIN2_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPCLR, PIN2))  /*!< Mask 0x00000002 */

#define PWR_WAKEUPCLR_PIN1_OFFSET  (0U)
#define PWR_WAKEUPCLR_PIN1_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPCLR, PIN1))  /*!< Mask 0x00000001 */

/*!< Wakeup flag register */
#define PWR_WAKEUPFLAG_PIN6_OFFSET  (5U)
#define PWR_WAKEUPFLAG_PIN6_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPFLAG, PIN6))  /*!< Mask 0x00000020 */

#define PWR_WAKEUPFLAG_PIN5_OFFSET  (4U)
#define PWR_WAKEUPFLAG_PIN5_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPFLAG, PIN5))  /*!< Mask 0x00000010 */

#define PWR_WAKEUPFLAG_PIN4_OFFSET  (3U)
#define PWR_WAKEUPFLAG_PIN4_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPFLAG, PIN4))  /*!< Mask 0x00000008 */

#define PWR_WAKEUPFLAG_PIN3_OFFSET  (2U)
#define PWR_WAKEUPFLAG_PIN3_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPFLAG, PIN3))  /*!< Mask 0x00000004 */

#define PWR_WAKEUPFLAG_PIN2_OFFSET  (1U)
#define PWR_WAKEUPFLAG_PIN2_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPFLAG, PIN2))  /*!< Mask 0x00000002 */

#define PWR_WAKEUPFLAG_PIN1_OFFSET  (0U)
#define PWR_WAKEUPFLAG_PIN1_MASK    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPFLAG, PIN1))  /*!< Mask 0x00000001 */

/*!< Wakeup flag register */
#define PWR_WAKEUPENPLR_PULLCFG6_OFFSET    (26U)
#define PWR_WAKEUPENPLR_PULLCFG6_MASK      (0x3UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG6))  /*!< Mask 0x0C000000 */
#define PWR_WAKEUPENPLR_PULLCFG6_NOPULLUP  (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG6))  /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PULLCFG6_PULLUP    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG6))  /*!< Mask 0x04000000 */
#define PWR_WAKEUPENPLR_PULLCFG6_PULLDOWN  (0x2UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG6))  /*!< Mask 0x08000000 */

#define PWR_WAKEUPENPLR_PULLCFG5_OFFSET    (24U)
#define PWR_WAKEUPENPLR_PULLCFG5_MASK      (0x3UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG5))  /*!< Mask 0x03000000 */
#define PWR_WAKEUPENPLR_PULLCFG5_NOPULLUP  (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG5))  /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PULLCFG5_PULLUP    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG5))  /*!< Mask 0x01000000 */
#define PWR_WAKEUPENPLR_PULLCFG5_PULLDOWN  (0x2UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG5))  /*!< Mask 0x02000000 */

#define PWR_WAKEUPENPLR_PULLCFG4_OFFSET    (22U)
#define PWR_WAKEUPENPLR_PULLCFG4_MASK      (0x3UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG4))  /*!< Mask 0x00C00000 */
#define PWR_WAKEUPENPLR_PULLCFG4_NOPULLUP  (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG4))  /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PULLCFG4_PULLUP    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG4))  /*!< Mask 0x00400000 */
#define PWR_WAKEUPENPLR_PULLCFG4_PULLDOWN  (0x2UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG4))  /*!< Mask 0x00800000 */

#define PWR_WAKEUPENPLR_PULLCFG3_OFFSET    (20U)
#define PWR_WAKEUPENPLR_PULLCFG3_MASK      (0x3UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG3))  /*!< Mask 0x00300000 */
#define PWR_WAKEUPENPLR_PULLCFG3_NOPULLUP  (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG3))  /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PULLCFG3_PULLUP    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG3))  /*!< Mask 0x00100000 */
#define PWR_WAKEUPENPLR_PULLCFG3_PULLDOWN  (0x2UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG3))  /*!< Mask 0x00200000 */

#define PWR_WAKEUPENPLR_PULLCFG2_OFFSET    (18U)
#define PWR_WAKEUPENPLR_PULLCFG2_MASK      (0x3UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG2))  /*!< Mask 0x000C0000 */
#define PWR_WAKEUPENPLR_PULLCFG2_NOPULLUP  (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG2))  /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PULLCFG2_PULLUP    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG2))  /*!< Mask 0x00040000 */
#define PWR_WAKEUPENPLR_PULLCFG2_PULLDOWN  (0x2UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG2))  /*!< Mask 0x00080000 */

#define PWR_WAKEUPENPLR_PULLCFG1_OFFSET    (16U)
#define PWR_WAKEUPENPLR_PULLCFG1_MASK      (0x3UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG1))  /*!< Mask 0x00030000 */
#define PWR_WAKEUPENPLR_PULLCFG1_NOPULLUP  (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG1))  /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PULLCFG1_PULLUP    (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG1))  /*!< Mask 0x00010000 */
#define PWR_WAKEUPENPLR_PULLCFG1_PULLDOWN  (0x2UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PULLCFG1))  /*!< Mask 0x00020000 */

#define PWR_WAKEUPENPLR_PLR6_OFFSET        (13U)
#define PWR_WAKEUPENPLR_PLR6_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR6))      /*!< Mask 0x00002000 */
#define PWR_WAKEUPENPLR_PLR6_RISEDET       (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR6))      /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PLR6_FALLDET       (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR6))      /*!< Mask 0x00002000 */

#define PWR_WAKEUPENPLR_PLR5_OFFSET        (12U)
#define PWR_WAKEUPENPLR_PLR5_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR5))      /*!< Mask 0x00001000 */
#define PWR_WAKEUPENPLR_PLR5_RISEDET       (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR5))      /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PLR5_FALLDET       (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR5))      /*!< Mask 0x00001000 */

#define PWR_WAKEUPENPLR_PLR4_OFFSET        (11U)
#define PWR_WAKEUPENPLR_PLR4_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR4))      /*!< Mask 0x00000800 */
#define PWR_WAKEUPENPLR_PLR4_RISEDET       (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR4))      /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PLR4_FALLDET       (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR4))      /*!< Mask 0x00000800 */

#define PWR_WAKEUPENPLR_PLR3_OFFSET        (10U)
#define PWR_WAKEUPENPLR_PLR3_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR3))      /*!< Mask 0x00000400 */
#define PWR_WAKEUPENPLR_PLR3_RISEDET       (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR3))      /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PLR3_FALLDET       (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR3))      /*!< Mask 0x00000400 */

#define PWR_WAKEUPENPLR_PLR2_OFFSET        (9U)
#define PWR_WAKEUPENPLR_PLR2_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR2))      /*!< Mask 0x00000200 */
#define PWR_WAKEUPENPLR_PLR2_RISEDET       (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR2))      /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PLR2_FALLDET       (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR2))      /*!< Mask 0x00000200 */

#define PWR_WAKEUPENPLR_PLR1_OFFSET        (8U)
#define PWR_WAKEUPENPLR_PLR1_MASK          (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR1))      /*!< Mask 0x00000100 */
#define PWR_WAKEUPENPLR_PLR1_RISEDET       (0x0UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR1))      /*!< Mask 0x00000000 */
#define PWR_WAKEUPENPLR_PLR1_FALLDET       (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, PLR1))      /*!< Mask 0x00000100 */

#define PWR_WAKEUPENPLR_EN6_OFFSET         (5U)
#define PWR_WAKEUPENPLR_EN6_MASK           (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, EN6))       /*!< Mask 0x00000020 */

#define PWR_WAKEUPENPLR_EN5_OFFSET         (4U)
#define PWR_WAKEUPENPLR_EN5_MASK           (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, EN5))       /*!< Mask 0x00000010 */

#define PWR_WAKEUPENPLR_EN4_OFFSET         (3U)
#define PWR_WAKEUPENPLR_EN4_MASK           (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, EN4))       /*!< Mask 0x00000008 */

#define PWR_WAKEUPENPLR_EN3_OFFSET         (2U)
#define PWR_WAKEUPENPLR_EN3_MASK           (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, EN3))       /*!< Mask 0x00000004 */

#define PWR_WAKEUPENPLR_EN2_OFFSET         (1U)
#define PWR_WAKEUPENPLR_EN2_MASK           (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, EN2))       /*!< Mask 0x00000002 */

#define PWR_WAKEUPENPLR_EN1_OFFSET         (0U)
#define PWR_WAKEUPENPLR_EN1_MASK           (0x1UL << REGISTER_FIELD_OFFSET(PWR, WAKEUPENPLR, EN1))       /*!< Mask 0x00000001 */

/*!< Power control registers */
#define PWR_OFFSET 0x4800UL
#define PWR_BASE OFFSET_ADDRESS(D3_AHB4_BASE, PWR_OFFSET)
#define PWR REGISTER_PTR(power_regs, PWR_BASE)

/** @} */ // End of Powr control group

/** @} */ // End of RegisterGroup group

#endif // POWER_H
